{"version":3,"sources":["components/ClassSwipe.js","components/HomepageSwiper.js","components/GridItem.js","components/GridContainer.js","pages/Home.js","components/Page.js"],"names":["SwiperCore","use","Scrollbar","ClassContainer","styled","div","ClassFigure","Figure","Image","ClassGroupContainer","classGroup","map","job","to","key","className","width","height","alt","src","process","TopClassSwipe","classes","spaceBetween","slidesPerView","breakpoints","360","490","770","991","1199","content","class","style","margin","ClassSwipe","name","includes","scrollbar","draggable","hide","param","explorers","cygnusKnights","heroes","resistance","nova","sengoku","flora","other","renderSwitch","Pagination","Autoplay","Navigation","ContentImage","ContentLaunch","span","ContentTitle","p","ContentSubtitle","ContentSwiper","launch","autoplay","delay","disableOnInteraction","pagination","clickable","navigation","centeredSlides","loop","href","link","target","rel","image","fluid","title","subtitle","FeaturedSwiper","GridItem","props","linkTo","imageUrl","text","GridContainer","HeaderImageUrl","ristonia","verdel","fox","grandis","Home","marginTop","Container","data","featured","recent","upcoming","popularContent","popularClasses","Title","h1","Subtitle","h2","Caption","Overlay","DarkOverlay","GradientOverlay","ContentContainer","ContentCard","Card","ContentCardTitle","ContentCardText","Text","TabLink","url","CardContainer","type","el","Img","variant","Body"],"mappings":"s5BAcAA,IAAWC,IAAI,CAACC,MAgBhB,IAAMC,EAAiBC,IAAOC,IAAV,KAmBdC,EAAcF,YAAOG,IAAOC,MAAdJ,CAAH,KAUV,SAASK,EAAT,GAA2C,IAAbC,EAAY,EAAZA,WACjC,OACI,kBAACP,EAAD,KACKO,EAAWC,KAAI,SAAAC,GAAG,OACf,kBAAC,OAAD,CAAMC,GAAE,mBAAcD,EAAI,IAAME,IAAKF,EAAKG,UAAU,aAChD,kBAAC,IAAD,KACI,kBAACT,EAAD,CACIU,MAAO,IACPC,OAAQ,IACRC,IAAKN,EAAI,GACTO,IAAG,UAAKC,kBAAL,2BAA8CR,EAAI,GAAlD,UACP,kBAAC,IAAD,YAajB,SAASS,EAAT,GAAkC,IAAVC,EAAS,EAATA,QAC3B,OACI,kBAAC,IAAD,CACIC,aAAc,GACdC,cAAe,EACfC,YAAa,CAEbC,IAAK,CACDF,cAAe,KAGnBG,IAAK,CACDH,cAAe,KAGnBI,IAAK,CACDJ,cAAe,KAGnBK,IAAK,CACDL,cAAe,KAGnBM,KAAM,CACFN,cAAe,OAKfF,EAAQX,KAAI,SAAAoB,GAAO,OACnB,kBAAC,IAAD,KACI,kBAAC,OAAD,CAAMlB,GAAE,mBAAckB,EAAQC,OAASlB,IAAKiB,EAAQb,IAAKH,UAAU,aAC/D,kBAAC,IAAD,CAAOI,IAAG,UAAKC,kBAAL,2BAA8CW,EAAQC,MAAtD,QAAmEd,IAAKa,EAAQb,IAAKe,MAAO,CAACjB,MAAO,QAASkB,OAAQ,mBAC/H,yBAAKnB,UAAU,wBA6KxBoB,IA/Jf,YAAmC,IAAdzB,EAAa,EAAbA,WACb0B,EAAO1B,EASX,OANGA,EAAW2B,SAAS,cACnBD,EAAO,aACF1B,EAAW2B,SAAS,WACzBD,EAAO,SAIP,6BACI,mDAAyBA,EAAzB,mBACA,kBAAC,IAAD,CACIE,UAAW,CAAEC,WAAW,EAAMC,MAAM,GACpCjB,aAAc,GACdC,cAAe,EACfC,YAAa,CAETC,IAAK,CACDF,cAAe,KAGnBG,IAAK,CACDH,cAAe,KAGnBI,IAAK,CACDJ,cAAe,KAGnBK,IAAK,CACLL,cAAe,KAGfM,KAAM,CACFN,cAAe,OAWvC,SAAsBiB,GAClB,OAAQA,GACJ,IAAK,YACD,OACInB,IAAQoB,UAAU/B,KAAI,SAAAC,GAAG,OACrB,kBAAC,IAAD,KACI,kBAAC,OAAD,CAAMC,GAAE,mBAAcD,EAAI,IAAME,IAAKF,EAAKG,UAAU,aAChD,kBAAC,IAAD,CAAOI,IAAG,UAAKC,kBAAL,2BAA8CR,EAAI,GAAlD,QAA4DqB,MAAO,CAACjB,MAAO,QAASkB,OAAQ,mBACtG,kBAAC,IAAD,WAMpB,IAAK,iBACD,OACIZ,IAAQqB,cAAchC,KAAI,SAAAC,GAAG,OACzB,kBAAC,IAAD,KACI,kBAAC,OAAD,CAAMC,GAAE,mBAAcD,EAAI,IAAME,IAAKF,EAAKG,UAAU,aAChD,kBAAC,IAAD,CAAOI,IAAG,UAAKC,kBAAL,2BAA8CR,EAAI,GAAlD,QAA4DqB,MAAO,CAACjB,MAAO,QAASkB,OAAQ,gBACtG,kBAAC,IAAD,WAMpB,IAAK,SACD,OACIZ,IAAQsB,OAAOjC,KAAI,SAAAC,GAAG,OAClB,kBAAC,IAAD,KACI,kBAAC,OAAD,CAAMC,GAAE,mBAAcD,EAAI,IAAME,IAAKF,EAAKG,UAAU,aAChD,kBAAC,IAAD,CAAOI,IAAG,UAAKC,kBAAL,2BAA8CR,EAAI,GAAlD,QAA4DqB,MAAO,CAACjB,MAAO,QAASkB,OAAQ,mBACtG,kBAAC,IAAD,WAMpB,IAAK,aACD,OACIZ,IAAQuB,WAAWlC,KAAI,SAAAC,GAAG,OACtB,kBAAC,IAAD,KACI,kBAAC,OAAD,CAAMC,GAAE,mBAAcD,EAAI,IAAME,IAAKF,EAAKG,UAAU,aAChD,kBAAC,IAAD,CAAOI,IAAG,UAAKC,kBAAL,2BAA8CR,EAAI,GAAlD,QAA4DqB,MAAO,CAACjB,MAAO,QAASkB,OAAQ,mBACtG,kBAAC,IAAD,WAMpB,IAAK,OACD,OACIZ,IAAQwB,KAAKnC,KAAI,SAAAC,GAAG,OAChB,kBAAC,IAAD,KACI,kBAAC,OAAD,CAAMC,GAAE,mBAAcD,EAAI,IAAME,IAAKF,EAAKG,UAAU,aAChD,kBAAC,IAAD,CAAOI,IAAG,UAAKC,kBAAL,2BAA8CR,EAAI,GAAlD,QAA4DqB,MAAO,CAACjB,MAAO,QAASkB,OAAQ,mBACtG,kBAAC,IAAD,WAMpB,IAAK,UACD,OACIZ,IAAQyB,QAAQpC,KAAI,SAAAC,GAAG,OACnB,kBAAC,IAAD,KACI,kBAAC,OAAD,CAAMC,GAAE,mBAAcD,EAAI,IAAME,IAAKF,EAAKG,UAAU,aAChD,kBAAC,IAAD,CAAOI,IAAG,UAAKC,kBAAL,2BAA8CR,EAAI,GAAlD,QAA4DqB,MAAO,CAACjB,MAAO,QAASkB,OAAQ,mBACtG,kBAAC,IAAD,WAMpB,IAAK,QACD,OACIZ,IAAQ0B,MAAMrC,KAAI,SAAAC,GAAG,OACjB,kBAAC,IAAD,KACI,kBAAC,OAAD,CAAMC,GAAE,mBAAcD,EAAI,IAAME,IAAKF,EAAKG,UAAU,aAChD,kBAAC,IAAD,CAAOI,IAAG,UAAKC,kBAAL,2BAA8CR,EAAI,GAAlD,QAA4DqB,MAAO,CAACjB,MAAO,QAASkB,OAAQ,mBACtG,kBAAC,IAAD,WAMpB,IAAK,QACD,OACIZ,IAAQ2B,MAAMtC,KAAI,SAAAC,GAAG,OACjB,kBAAC,IAAD,KACI,kBAAC,OAAD,CAAMC,GAAE,mBAAcD,EAAI,IAAME,IAAKF,EAAKG,UAAU,aAChD,kBAAC,IAAD,CAAOI,IAAG,UAAKC,kBAAL,2BAA8CR,EAAI,GAAlD,QAA4DqB,MAAO,CAACjB,MAAO,QAASkB,OAAQ,mBACtG,kBAAC,IAAD,WAMpB,QACI,OACIZ,IAAQoB,UAAU/B,KAAI,SAAAC,GAAG,OACrB,kBAAC,IAAD,KACI,kBAAC,OAAD,CAAMC,GAAE,mBAAcD,EAAI,IAAME,IAAKF,EAAKG,UAAU,aAChD,kBAAC,IAAD,CAAOI,IAAG,UAAKC,kBAAL,2BAA8CR,EAAI,GAAlD,QAA4DqB,MAAO,CAACjB,MAAO,QAASkB,OAAQ,mBACtG,kBAAC,IAAD,YA/GXgB,CAAad,O,w5LC7J9BpC,IAAWC,IAAI,CAACkD,IAAYC,IAAUC,MAetC,IAAMC,EAAelD,YAAOI,IAAPJ,CAAH,KAkClB,IAAMmD,EAAgBnD,IAAOoD,KAAV,IACIpC,mBAcjBqC,EAAerD,IAAOsD,EAAV,KAcZC,EAAkBvD,IAAOsD,EAAV,KAYd,SAASE,EAAT,GAA0C,IAAlB7B,EAAiB,EAAjBA,QAAS8B,EAAQ,EAARA,OACpC,OACI,kBAAC,IAAD,CACIC,SAAU,CAAEC,MAAO,IAAMC,sBAAsB,GAC/CC,WAAY,CAAEC,WAAW,GACzB3C,aAAc,GACdC,cAAe,EACf2C,YAAU,EACVC,gBAAc,EACdC,MAAI,EACJ5C,YAAa,CAEbC,IAAK,CACDF,cAAe,GAGnBK,IAAK,CACDL,cAAe,KAKnBO,EAAQpB,KAAI,SAAAoB,GAAO,OACnB,kBAAC,IAAD,CAAahB,UAAU,iBACnB,uBAAGuD,KAAMvC,EAAQwC,KAAMC,OAAO,SAASC,IAAI,uBAC3C,kBAACnB,EAAD,CAAcnC,IAAKY,EAAQ2C,MAAOxD,IAAKa,EAAQb,IAAKyD,OAAK,IACzD,kBAAC,IAAD,MACEd,GAAU,kBAACN,EAAD,MACZ,kBAACE,EAAD,KAAe1B,EAAQ6C,OACvB,kBAACjB,EAAD,KAAkB5B,EAAQ8C,gBAS3BC,MA7Gf,YAAoC,IAAX/C,EAAU,EAAVA,QACrB,OACI,kBAAC,IAAD,CACI+B,SAAU,CAAEC,MAAO,IAAMC,sBAAsB,GAC/CC,WAAY,CAAEC,WAAW,GACzB3C,aAAc,GACdC,cAAe,EACf6C,MAAI,EACJF,YAAU,GAGNpC,EAAQpB,KAAI,SAAAoB,GAAO,OACnB,kBAAC,IAAD,CAAahB,UAAU,iBACnB,uBAAGuD,KAAMvC,EAAQwC,KAAMC,OAAO,SAASC,IAAI,uBAC3C,kBAACnB,EAAD,CAAcnC,IAAKY,EAAQ2C,MAAOxD,IAAKa,EAAQb,IAAKyD,OAAK,IACzD,kBAAC,IAAD,a,wBCxBLI,MAdf,SAAkBC,GACd,OACI,yBAAKjE,UAAU,gBACX,kBAAC,OAAD,CAAMF,GAAImE,EAAMC,QACZ,kBAACzE,EAAA,EAAD,CAAOO,UAAU,aAAaI,IAAK6D,EAAME,WACzC,yBAAKnE,UAAU,iBACf,yBAAKA,UAAU,aACX,wBAAIA,UAAU,cAAciE,EAAMG,U,OCOvCC,MAXf,WACI,OACI,yBAAKrE,UAAU,uBACX,kBAAC,EAAD,CAAUoE,KAAK,UAAUF,OAAO,WAAWC,SAAQ,UAAKG,IAAeC,SAApB,UACnD,kBAAC,EAAD,CAAUH,KAAK,UAAUF,OAAO,WAAWC,SAAQ,UAAKG,IAAeE,OAApB,UACnD,kBAAC,EAAD,CAAUJ,KAAK,SAASF,OAAO,UAAUC,SAAQ,UAAKG,IAAeG,IAApB,UACjD,kBAAC,EAAD,CAAUL,KAAK,YAAYF,OAAO,aAAaC,SAAQ,UAAKG,IAAeI,QAApB,Y,OCkBpDC,UAnBf,WACE,OACE,yBAAKzD,MAAO,CAAC0D,UAAW,UACtB,kBAAC,EAAD,MACA,kBAACC,EAAA,EAAD,KACE,kBAAC,EAAD,CAAgB7D,QAAS8D,EAAKC,WAC9B,gEACA,kBAAClC,EAAD,CAAe7B,QAAS8D,EAAKE,OAAQlC,QAAQ,IAC7C,gDACA,kBAACD,EAAD,CAAe7B,QAAS8D,EAAKG,SAAUnC,QAAQ,IAC/C,+CACA,kBAACD,EAAD,CAAe7B,QAAS8D,EAAKI,eAAgBpC,QAAQ,IACrD,gEACA,kBAAC,IAAD,CAAevC,QAASuE,EAAKK,qB,y+FCnB9B,IAAMC,EAAQ/F,IAAOgG,GAAV,KAML3C,EAAerD,IAAOgG,GAAV,KAMZC,EAAWjG,IAAOkG,GAAV,KAORC,EAAUnG,IAAOsD,EAAV,KAQP8C,EAAUpG,IAAOC,IAAV,KAQPoG,EAAcrG,IAAOC,IAAV,KAUXqG,EAAkBtG,IAAOC,IAAV,KAYfsG,EAAmBvG,IAAOC,IAAV,KAqBvBuG,EAAcxG,YAAOyG,IAAPzG,CAAH,KAqBX0G,EAAmB1G,YAAOyG,IAAKV,MAAZ/F,CAAH,KAIhB2G,EAAkB3G,YAAOyG,IAAKG,KAAZ5G,CAAH,KAed,SAAS6G,EAAT,GAAyB,IAAPC,EAAM,EAANA,IACrB,OACI,uBAAG5C,KAAM4C,EAAK1C,OAAO,SAASC,IAAI,uBAAuByC,GAI1D,SAASC,EAAT,GAAyC,IAAjBpF,EAAgB,EAAhBA,QAASqF,EAAO,EAAPA,KACpC,OACI,kBAACT,EAAD,KAEI5E,EAAQpB,KAAI,SAAA0G,GAAE,OACV,kBAACT,EAAD,KACI,kBAAC,OAAD,CAAM/F,GAAE,UAAKuG,EAAL,YAAaC,EAAG,KAAM,kBAAC,IAAKC,IAAN,CAAUC,QAAQ,MAAMpG,IAAG,UAAKC,kBAAL,sBAAyCiG,EAAG,GAA5C,QAAsDnG,IAAKmG,EAAG,MACvH,kBAAC,IAAKG,KAAN,KACI,kBAAC,OAAD,CAAM3G,GAAE,UAAKuG,EAAL,YAAaC,EAAG,KAAM,kBAACP,EAAD,KAAmBO,EAAG,KACpD,kBAACN,EAAD,KAAkBM,EAAG","file":"static/js/11.9ef5dd36.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Image, Figure } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport SwiperCore, { Scrollbar } from 'swiper';\r\nimport styled from 'styled-components';\r\n\r\nimport { classes } from '../special/Values';\r\nimport { Overlay } from '../components/Page';\r\n\r\n// Import Swiper styles\r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/scrollbar/scrollbar.scss';\r\n\r\nSwiperCore.use([Scrollbar]);\r\n\r\n/*\r\nThis file contains the swiping elements that use the class portraits\r\nIn this file you will find:\r\n-ClassGroupContainer - container class element on the Classes page\r\n-TopClassSwipe - most viewed classes swiper element on the Homepage page\r\n-ClassSwipe - swipable class element at the bottom of Class Overview\r\n*/\r\n\r\n/*\r\n    Responsible for the class container element on the Classes page\r\n    Created by: Ikasuu, Winter 2020\r\n*/\r\n\r\n// Container which holds all the classes for a specfic class group\r\nconst ClassContainer = styled.div`\r\n    width: 62%;\r\n    padding-left: 2.5rem;\r\n    margin: auto;\r\n\r\n    /* Adjustments to container and figures for mobile / tablet */\r\n    @media(max-width: 1199px){\r\n        width: 90%;\r\n    }\r\n\r\n    @media(max-width: 521px){\r\n        width: 95%;\r\n    }\r\n\r\n    @media(max-width: 473px){\r\n        padding-left: 1rem;\r\n    }\r\n`;\r\n\r\nconst ClassFigure = styled(Figure.Image)`\r\n    margin: 0.5rem;\r\n    @media(max-width: 473px){\r\n        margin: 0.25rem;\r\n    }\r\n    @media(max-width: 422px){\r\n        margin: 0;\r\n    }\r\n`;\r\n\r\nexport function ClassGroupContainer({classGroup}){\r\n    return(\r\n        <ClassContainer>\r\n            {classGroup.map(job => \r\n                <Link to={`/classes/${job[0]}`} key={job} className=\"hvr-float\">\r\n                    <Figure>\r\n                        <ClassFigure\r\n                            width={120}\r\n                            height={176}\r\n                            alt={job[1]}\r\n                            src={`${process.env.PUBLIC_URL}/class-portrait/${job[0]}.jpg`}/>\r\n                        <Overlay/>\r\n                    </Figure>\r\n                </Link>\r\n            )}\r\n        </ClassContainer>\r\n    )\r\n}\r\n\r\n/*\r\n    Responsible for the most viewed classes swiper element on the Homepage page\r\n    Created by: Ikasuu, Fall 2020\r\n*/\r\n\r\nexport function TopClassSwipe({classes}){\r\n    return(\r\n        <Swiper\r\n            spaceBetween={10}\r\n            slidesPerView={2}\r\n            breakpoints={{\r\n            // when window width is >= 360px\r\n            360: {\r\n                slidesPerView: 3.5,\r\n                },\r\n            // when window width is >= 490px\r\n            490: {\r\n                slidesPerView: 4.5,\r\n                },\r\n            // when window width is >= 770px\r\n            770: {\r\n                slidesPerView: 5.5,\r\n                },\r\n            // when window width is >= 991px\r\n            991: {\r\n                slidesPerView: 8.5,\r\n            },\r\n            // when window width is >= 1199px\r\n            1199: {\r\n                slidesPerView: 9.5,\r\n                }\r\n            }}\r\n        >\r\n            {\r\n                classes.map(content => \r\n                <SwiperSlide>\r\n                    <Link to={`/classes/${content.class}`} key={content.alt} className=\"hvr-float\">\r\n                        <Image src={`${process.env.PUBLIC_URL}/class-portrait/${content.class}.jpg`} alt={content.alt} style={{width: '100px', margin: '1rem 0 1rem 0'}}/>\r\n                        <div className=\"class-overlay\"/>\r\n                    </Link>\r\n                </SwiperSlide>\r\n                )\r\n            }\r\n        </Swiper>\r\n    );\r\n}\r\n\r\n/*\r\n    Responsible for the swipable class element at the bottom of Class Overview\r\n    Created by: Ikasuu, Fall 2020\r\n*/\r\n\r\nfunction ClassSwipe({classGroup}) {\r\n    let name = classGroup\r\n    \r\n    // Removes words like (Xenon) or (Beast Tamer) for Resistance and Other type classes when displaying <h5>\r\n    if(classGroup.includes(\"Resistance\")){\r\n        name = \"Resistance\";\r\n    }else if(classGroup.includes(\"Other\")){\r\n        name = \"Other\";\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h5>Check out some more {name} classes below:</h5>\r\n            <Swiper\r\n                scrollbar={{ draggable: true, hide: true }}\r\n                spaceBetween={10}\r\n                slidesPerView={2}\r\n                breakpoints={{\r\n                    // when window width is >= 360px\r\n                    360: {\r\n                        slidesPerView: 3.5\r\n                    },\r\n                    // when window width is >= 490px\r\n                    490: {\r\n                        slidesPerView: 4.5\r\n                    },\r\n                    // when window width is >= 770px\r\n                    770: {\r\n                        slidesPerView: 5.5\r\n                    },\r\n                    // when window width is >= 991px\r\n                    991: {\r\n                    slidesPerView: 8.5\r\n                    },\r\n                    // when window width is >= 1199px\r\n                    1199: {\r\n                        slidesPerView: 9.5\r\n                    }\r\n                }}\r\n            >\r\n                {renderSwitch(name)}\r\n            </Swiper>\r\n        </div>\r\n    )\r\n}\r\n\r\n//Renders the proper class groups based on current class group\r\nfunction renderSwitch(param){\r\n    switch (param) {\r\n        case \"Explorers\":\r\n            return(\r\n                classes.explorers.map(job => \r\n                    <SwiperSlide>\r\n                        <Link to={`/classes/${job[0]}`} key={job} className=\"hvr-float\">\r\n                            <Image src={`${process.env.PUBLIC_URL}/class-portrait/${job[0]}.jpg`} style={{width: '100px', margin: '1rem 0 1rem 0'}}/>\r\n                            <Overlay/>\r\n                        </Link>\r\n                    </SwiperSlide>\r\n                )\r\n            );\r\n\r\n        case \"Cygnus Knights\":\r\n            return(\r\n                classes.cygnusKnights.map(job => \r\n                    <SwiperSlide>\r\n                        <Link to={`/classes/${job[0]}`} key={job} className=\"hvr-float\">\r\n                            <Image src={`${process.env.PUBLIC_URL}/class-portrait/${job[0]}.jpg`} style={{width: '100px', margin: '1rem 0 0 0'}}/>\r\n                            <Overlay/>\r\n                        </Link>\r\n                    </SwiperSlide>\r\n                )\r\n            );\r\n\r\n        case \"Heroes\":\r\n            return(\r\n                classes.heroes.map(job => \r\n                    <SwiperSlide>\r\n                        <Link to={`/classes/${job[0]}`} key={job} className=\"hvr-float\">\r\n                            <Image src={`${process.env.PUBLIC_URL}/class-portrait/${job[0]}.jpg`} style={{width: '100px', margin: '1rem 0 1rem 0'}}/>\r\n                            <Overlay/>\r\n                        </Link>\r\n                    </SwiperSlide>\r\n                )\r\n            );\r\n\r\n        case \"Resistance\":\r\n            return(\r\n                classes.resistance.map(job => \r\n                    <SwiperSlide>\r\n                        <Link to={`/classes/${job[0]}`} key={job} className=\"hvr-float\">\r\n                            <Image src={`${process.env.PUBLIC_URL}/class-portrait/${job[0]}.jpg`} style={{width: '100px', margin: '1rem 0 1rem 0'}}/>\r\n                            <Overlay/>\r\n                        </Link>\r\n                    </SwiperSlide>\r\n                )\r\n            );\r\n\r\n        case \"Nova\":\r\n            return(\r\n                classes.nova.map(job => \r\n                    <SwiperSlide>\r\n                        <Link to={`/classes/${job[0]}`} key={job} className=\"hvr-float\">\r\n                            <Image src={`${process.env.PUBLIC_URL}/class-portrait/${job[0]}.jpg`} style={{width: '100px', margin: '1rem 0 1rem 0'}}/>\r\n                            <Overlay/>\r\n                        </Link>\r\n                    </SwiperSlide>\r\n                )\r\n            );\r\n\r\n        case \"Sengoku\":\r\n            return(\r\n                classes.sengoku.map(job => \r\n                    <SwiperSlide>\r\n                        <Link to={`/classes/${job[0]}`} key={job} className=\"hvr-float\">\r\n                            <Image src={`${process.env.PUBLIC_URL}/class-portrait/${job[0]}.jpg`} style={{width: '100px', margin: '1rem 0 1rem 0'}}/>\r\n                            <Overlay/>\r\n                        </Link>\r\n                    </SwiperSlide>\r\n                )\r\n            );\r\n\r\n        case \"Flora\":\r\n            return(\r\n                classes.flora.map(job => \r\n                    <SwiperSlide>\r\n                        <Link to={`/classes/${job[0]}`} key={job} className=\"hvr-float\">\r\n                            <Image src={`${process.env.PUBLIC_URL}/class-portrait/${job[0]}.jpg`} style={{width: '100px', margin: '1rem 0 1rem 0'}}/>\r\n                            <Overlay/>\r\n                        </Link>\r\n                    </SwiperSlide>\r\n                )\r\n            );\r\n\r\n        case \"Other\":\r\n            return(\r\n                classes.other.map(job => \r\n                    <SwiperSlide>\r\n                        <Link to={`/classes/${job[0]}`} key={job} className=\"hvr-float\">\r\n                            <Image src={`${process.env.PUBLIC_URL}/class-portrait/${job[0]}.jpg`} style={{width: '100px', margin: '1rem 0 1rem 0'}}/>\r\n                            <Overlay/>\r\n                        </Link>\r\n                    </SwiperSlide>\r\n                )\r\n            );\r\n\r\n        default:\r\n            return(\r\n                classes.explorers.map(job => \r\n                    <SwiperSlide>\r\n                        <Link to={`/classes/${job[0]}`} key={job} className=\"hvr-float\">\r\n                            <Image src={`${process.env.PUBLIC_URL}/class-portrait/${job[0]}.jpg`} style={{width: '100px', margin: '1rem 0 1rem 0'}}/>\r\n                            <Overlay/>\r\n                        </Link>\r\n                    </SwiperSlide>\r\n                )\r\n            );\r\n    }\r\n}\r\n\r\nexport default ClassSwipe\r\n","import React from 'react';\r\nimport { Image } from 'react-bootstrap';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport SwiperCore, { Pagination, Autoplay, Navigation } from 'swiper';\r\nimport styled from 'styled-components';\r\n\r\nimport { Overlay, GradientOverlay } from '../components/Page';\r\n\r\n// Import Swiper styles\r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/pagination/pagination.scss';\r\nimport 'swiper/components/navigation/navigation.scss';\r\n\r\nSwiperCore.use([Pagination, Autoplay, Navigation]);\r\n\r\n/*\r\nThis file contains the swiping elements used on the homepage\r\nIn this file you will find:\r\n-FeaturedSwiper - swiper to display featured banners\r\n-ContentSwiper - swiper used to display banners\r\n*/\r\n\r\n/*\r\n    Responsible for the big main banner for featured banners on the homepage\r\n    Created by: Ikasuu, Winter 2020\r\n*/\r\n\r\n// Round the corners of swiper images\r\nconst ContentImage = styled(Image)`\r\n    border-radius: 1rem;\r\n`;\r\n\r\nfunction FeaturedSwiper({content}) {\r\n    return (\r\n        <Swiper\r\n            autoplay={{ delay: 7000, disableOnInteraction: false }}\r\n            pagination={{ clickable: true }}\r\n            spaceBetween={30}\r\n            slidesPerView={1}\r\n            loop\r\n            navigation\r\n        >\r\n            {\r\n                content.map(content => \r\n                <SwiperSlide className=\"content-slide\">\r\n                    <a href={content.link} target=\"_blank\" rel=\"noreferrer noopener\">\r\n                    <ContentImage src={content.image} alt={content.alt} fluid/>\r\n                    <Overlay/>\r\n                    </a>\r\n                </SwiperSlide>\r\n                )\r\n            }\r\n        </Swiper>\r\n    );\r\n}\r\n\r\n/*\r\n    Responsible for the smaller banners on the homepage\r\n    Created by: Ikasuu, Fall 2020\r\n*/\r\n\r\n// Launch button stylization\r\nconst ContentLaunch = styled.span`\r\n    background: url(\"${process.env.PUBLIC_URL}/icons/launch-white-18dp.svg\");\r\n    background-size: 1.5rem 1.5rem !important;\r\n    -webkit-filter: drop-shadow( 3px 3px 1px rgba(0, 0, 0, .8));\r\n    filter: drop-shadow( 3px 3px 1px rgba(0, 0, 0, .8));\r\n    height: 1.5rem;\r\n    width: 1.5rem;\r\n    display:block;\r\n    position: absolute;\r\n    margin: 1rem 1rem 0 0;\r\n    top: 0;\r\n    right: 0;\r\n`;\r\n\r\n// Styling for the title + black bar on swiper images\r\nconst ContentTitle = styled.p`\r\n    font-family: acumin-pro, sans-serif !important;\r\n    font-size: 1.25rem;\r\n    background-color: black;\r\n    color: white;\r\n    display: inline;\r\n    padding: 0.5rem 1rem 0.5rem 0.5rem;\r\n    position: absolute;\r\n    margin: 0 0 2rem 0;\r\n    bottom: 0;\r\n    left: 0;\r\n`;\r\n\r\n// Styling for text w/o black bar such as date\r\nconst ContentSubtitle = styled.p`\r\n    font-family: acumin-pro, sans-serif !important;\r\n    font-size: 1.1rem;\r\n    text-shadow: 1px 1px black;\r\n    color: white;\r\n    display: inline;\r\n    position: absolute;\r\n    margin: 0.5rem;\r\n    top: 0;\r\n    left: 0;\r\n`;\r\n\r\nexport function ContentSwiper({content, launch}){\r\n    return(\r\n        <Swiper\r\n            autoplay={{ delay: 6000, disableOnInteraction: false }}\r\n            pagination={{ clickable: true }}\r\n            spaceBetween={30}\r\n            slidesPerView={2}\r\n            navigation\r\n            centeredSlides\r\n            loop\r\n            breakpoints={{\r\n            // when window width is >= 360px\r\n            360: {\r\n                slidesPerView: 1,\r\n                },\r\n            // when window width is >= 991px\r\n            991: {\r\n                slidesPerView: 2,\r\n            }\r\n        }}\r\n        >\r\n        {\r\n            content.map(content => \r\n            <SwiperSlide className=\"content-slide\">\r\n                <a href={content.link} target=\"_blank\" rel=\"noreferrer noopener\">\r\n                <ContentImage src={content.image} alt={content.alt} fluid/>\r\n                <GradientOverlay/>\r\n                { launch && <ContentLaunch/>}\r\n                <ContentTitle>{content.title}</ContentTitle>\r\n                <ContentSubtitle>{content.subtitle}</ContentSubtitle>\r\n                </a>\r\n            </SwiperSlide>\r\n            )\r\n        }\r\n        </Swiper>\r\n    );\r\n}\r\n\r\nexport default FeaturedSwiper;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Image } from 'react-bootstrap';\r\n\r\n/*\r\n    Individual grid item component for our homepage. To be used with our GridContainer.js\r\n    Created by: Ikasuu, Fall 2020\r\n*/\r\n\r\nfunction GridItem(props) {\r\n    return (\r\n        <div className=\"grid-wrapper\">\r\n            <Link to={props.linkTo}>\r\n                <Image className=\"grid-image\" src={props.imageUrl}/>\r\n                <div className=\"grid-overlay\"/>\r\n                <div className=\"grid-text\">\r\n                    <h3 className=\"grid-title\">{props.text}</h3>\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GridItem\r\n","import React from 'react';\r\n\r\nimport HeaderImageUrl from '../special/Values';\r\nimport GridItem from '../components/GridItem';\r\n\r\nimport '../css/grid-item.css';\r\n\r\n/*\r\n    Container for our image links on the homepage\r\n    Created by: Ikasuu, Fall 2020\r\n*/\r\n\r\nfunction GridContainer() {\r\n    return (\r\n        <div className=\"grid-flex-container\">\r\n            <GridItem text=\"Content\" linkTo=\"/content\" imageUrl={`${HeaderImageUrl.ristonia}.png`}/>\r\n            <GridItem text=\"Classes\" linkTo=\"/classes\" imageUrl={`${HeaderImageUrl.verdel}.png`}/>\r\n            <GridItem text=\"Events\" linkTo=\"/events\" imageUrl={`${HeaderImageUrl.fox}.png`}/>\r\n            <GridItem text=\"Resources\" linkTo=\"/resources\" imageUrl={`${HeaderImageUrl.grandis}.png`}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GridContainer\r\n","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\n\r\nimport data from '../special/home-content.json';\r\n\r\nimport FeaturedSwiper, { ContentSwiper } from '../components/HomepageSwiper';\r\nimport { TopClassSwipe } from '../components/ClassSwipe';\r\nimport GridContainer from '../components/GridContainer';\r\n\r\n// Import CSS\r\nimport '../css/homepage.css';\r\n\r\n/*\r\n    Homepage\r\n    Created by: Ikasuu, Fall 2020\r\n*/\r\n\r\nfunction Home(){\r\n  return(\r\n    <div style={{marginTop: '-1rem'}}>\r\n      <GridContainer/>\r\n      <Container>\r\n        <FeaturedSwiper content={data.featured}/>\r\n        <h2>Recent News in Global MapleStory</h2>\r\n        <ContentSwiper content={data.recent} launch={true}/>\r\n        <h2>Upcoming Updates</h2>\r\n        <ContentSwiper content={data.upcoming} launch={true}/>\r\n        <h2>Popular Content</h2>\r\n        <ContentSwiper content={data.popularContent} launch={false}/>\r\n        <h2>Last Month's Most Viewed Classes</h2>\r\n        <TopClassSwipe classes={data.popularClasses}/>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home\r\n\r\n\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Card } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\n/*\r\n   Component with common stylized components for pages like Content, Classes, and Events\r\n   Additionally contains common components as well\r\n    Created by: Ikasuu, Fall 2020\r\n*/\r\n\r\nexport const Title = styled.h1`\r\n    text-align: center;\r\n    margin-bottom: 3rem;\r\n    font-size: 3.5rem;\r\n`;\r\n\r\nexport const ContentTitle = styled.h1`\r\n    margin-top: 1rem;\r\n    margin-bottom: 2.5rem;\r\n    font-size: 3.5rem;\r\n`;\r\n\r\nexport const Subtitle = styled.h2`\r\n    text-align: center;\r\n    margin-top: 2rem;\r\n    margin-bottom: 2.5rem;\r\n    font-size: 2.5rem;\r\n`;\r\n\r\nexport const Caption = styled.p`\r\n    text-align: center;\r\n    margin-top: 2.5rem;\r\n    margin-bottom: 1.5rem;\r\n    font-size: 1.08rem;\r\n`;\r\n\r\n// An overlay to go over images\r\nexport const Overlay = styled.div`\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    top: 0;\r\n    left: 0;\r\n`;\r\n\r\nexport const DarkOverlay = styled.div`\r\n    position: absolute;\r\n    width: 100%;\r\n    height: inherit;\r\n    top: 0;\r\n    left: 0;\r\n    background-color: #2a2829;\r\n    opacity: 0.2;\r\n`;\r\n\r\nexport const GradientOverlay = styled.div`\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 1rem;\r\n    top: 0;\r\n    left: 0;\r\n    background: rgb(0,0,0);\r\n    background: linear-gradient(145deg, rgba(0,0,0,1) 3%, rgba(107,107,107,0) 100%); \r\n    opacity: 0.8;\r\n`;\r\n\r\nexport const ContentContainer = styled.div`\r\n    max-width: 80%;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n    justify-content: start;\r\n\r\n    @media(min-width: 200px){\r\n        max-width: 100%;\r\n    }\r\n    @media(min-width: 500px){\r\n        padding: 0 0 0 0.5rem;\r\n        max-width: 90%;\r\n    }\r\n    @media(min-width: 800px){\r\n        padding: 0 0 0 2.5rem;\r\n        max-width: 80%;\r\n    }\r\n`;\r\n\r\nconst ContentCard = styled(Card)`\r\n    min-width: 8rem;\r\n    margin: 0.5rem;\r\n\r\n    @media(min-width: 200px){\r\n        max-width: 100%;\r\n    }\r\n    @media(min-width: 400px){\r\n        max-width: 45%;\r\n    }\r\n    @media(min-width: 800px){\r\n        max-width: 30%;\r\n    }\r\n    @media(min-width: 1100px){\r\n        max-width: 23%;\r\n    }\r\n    @media(min-width: 1500px){\r\n        max-width: 23.5%;\r\n    }\r\n`;\r\n\r\nconst ContentCardTitle = styled(Card.Title)`\r\n    font-size: 1.15rem;\r\n`;\r\n\r\nconst ContentCardText = styled(Card.Text)`\r\n    font-size: 0.9rem;\r\n    line-height: 1.25rem;\r\n\r\n    @media(min-width: 200px){\r\n        font-size: 0.8rem;\r\n    }\r\n    @media(min-width: 430px){\r\n        font-size: 0.85rem;\r\n    }\r\n    @media(min-width: 800px){\r\n        font-size: 0.9rem;\r\n    }\r\n`;\r\n\r\nexport function TabLink({url}) {\r\n    return (\r\n        <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">{url}</a>\r\n    )\r\n}\r\n\r\nexport function CardContainer({content, type}) {\r\n    return (\r\n        <ContentContainer>\r\n        {\r\n            content.map(el => \r\n                <ContentCard>\r\n                    <Link to={`${type}/${el[0]}`}><Card.Img variant=\"top\" src={`${process.env.PUBLIC_URL}/thumbnail/${el[0]}.png`} alt={el[1]}/></Link>\r\n                    <Card.Body>\r\n                        <Link to={`${type}/${el[0]}`}><ContentCardTitle>{el[1]}</ContentCardTitle></Link>\r\n                        <ContentCardText>{el[2]}</ContentCardText>\r\n                    </Card.Body>\r\n                </ContentCard>\r\n            )\r\n        }\r\n    </ContentContainer>\r\n    );\r\n}\r\n\r\nexport default CardContainer\r\n"],"sourceRoot":""}