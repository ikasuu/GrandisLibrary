{"version":3,"sources":["components/HeaderImage.js","pages/Resources.js","components/Page.js"],"names":["OuterBox","styled","div","HeaderBox","Header","Image","HeaderImage","props","fluid","src","imageUrl","SwiperCore","use","Scrollbar","Mousewheel","ResourceSubtitle","h2","FaqSwiper","Swiper","FaqSearch","input","FaqSearchWrapper","FaqQuestion","Card","Title","TableContainer","fuse","Fuse","data","faq","key","Resources","React","useState","searchTerm","setSearchTerm","HeaderImageUrl","grandis","eventKey","title","borderless","links","map","link","icon","alt","style","width","height","url","creators","className","type","placeholder","onChange","event","target","value","scrollbar","draggable","hide","spaceBetween","slidesPerView","direction","freeMode","mousewheel","term","results","search","length","searchQuery","question","index","item","Body","answer","Text","h1","ContentTitle","Subtitle","Caption","p","Overlay","DarkOverlay","GradientOverlay","ContentContainer","ContentCard","ContentCardTitle","ContentCardText","TabLink","href","rel","CardContainer","content","el","to","Img","variant","process"],"mappings":"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","file":"static/js/17.51f1aa00.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Image } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\n\r\nimport { DarkOverlay } from '../components/Page';\r\n\r\n/*\r\n    Header image component that appears on the top of certain pages\r\n    Created by: Ikasuu, Fall 2020\r\n*/\r\n\r\n// Most outer container for margins\r\nconst OuterBox = styled.div`\r\n    margin-bottom: 4rem;\r\n`;\r\n\r\n// Box container for our header\r\nconst HeaderBox = styled.div`\r\n    height: 20rem;\r\n`;\r\n\r\n// Header Image\r\nconst Header = styled(Image)`\r\n    width: 100%;\r\n    height: 100%;\r\n    object-position: 50% 75%;\r\n    object-fit: cover;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nfunction HeaderImage(props) {\r\n    return (\r\n        <OuterBox>\r\n            <HeaderBox>\r\n                <Header fluid src={props.imageUrl}/>\r\n                <DarkOverlay/>\r\n            </HeaderBox>\r\n        </OuterBox>\r\n    );\r\n}\r\n\r\nexport default HeaderImage\r\n","import React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport SwiperCore, { Mousewheel, Scrollbar } from 'swiper';\r\nimport styled from 'styled-components';\r\nimport { Card, Container, Tab, Table, Tabs } from 'react-bootstrap';\r\nimport Fuse from 'fuse.js';\r\n\r\nimport data from '../special/resource-content.json';\r\n\r\nimport HeaderImageUrl from '../special/Values';\r\nimport HeaderImage from '../components/HeaderImage';\r\nimport { Title, TabLink } from '../components/Page';\r\n\r\n// Import Swiper styles\r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/scrollbar/scrollbar.scss';\r\n\r\nSwiperCore.use([Scrollbar, Mousewheel]);\r\n\r\n/*\r\n    Resources page\r\n    Created by: Ikasuu, Fall 2020\r\n*/\r\n\r\nconst ResourceSubtitle = styled.h2`\r\n    margin: 2.5rem 0 -2rem 0;\r\n\r\n    //When additional faq class is added, use this margin instead\r\n    &.faq{\r\n        margin: 2.5rem 0 2rem 0;\r\n    }\r\n`;\r\n\r\n// Swiper element used for the FAQ\r\nconst FaqSwiper = styled(Swiper)`\r\n    width: 90%;\r\n    max-height: 50rem;\r\n    min-height: 50rem;\r\n    overflow: hidden;\r\n`;\r\n\r\n// Filter search bar for FAQ\r\nconst FaqSearch = styled.input`\r\n    margin: 0 0 1.5rem 0;\r\n    padding-left: 1rem;\r\n    width: 95%;\r\n    height: 3rem;\r\n    border: none;\r\n    -webkit-filter: drop-shadow( 3px 3px 3px rgba(0, 0, 0, .2));\r\n    filter: drop-shadow( 3px 3px 3px rgba(0, 0, 0, .2));\r\n`;\r\n\r\n// Used to center search bar fror FAQ\r\nconst FaqSearchWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n\r\n// Styling for FAQ question title on each card\r\nconst FaqQuestion = styled(Card.Title)`\r\n    margin: 1rem 1rem -0.5rem 1rem;\r\n`;\r\n\r\n// Container for the table at the top, used so we don't extend the screen for mobile\r\nconst TableContainer = styled.div`\r\n    overflow-x: auto;\r\n    margin: 3rem 0 3rem 0;\r\n`;\r\n\r\n// Create search query object that searches our data by looking at the question and tags\r\nconst fuse = new Fuse(data.faq, { key: [\"question\", \"tags\"]});\r\n\r\n// Custom filtering function, return original if search query returns nothing (len = 0)\r\nconst searchQuery = (term) => {\r\n    const results = fuse.search(term);\r\n    if(results.length){\r\n        return results;\r\n    }\r\n    return data.faq;\r\n}\r\n\r\nfunction Resources() {\r\n    // Used to store what's typed into search bar\r\n    const [searchTerm, setSearchTerm] = React.useState(\"\");\r\n\r\n    return (\r\n        <div>\r\n            <Helmet>\r\n                <title>Resources | Grandis Library</title>\r\n            </Helmet>\r\n            <HeaderImage imageUrl={`${HeaderImageUrl.grandis}.jpg`}/>\r\n            <Title>Resources</Title>\r\n            <Container>\r\n                <Tabs>\r\n                    <Tab eventKey=\"links\" title=\"Useful Links\">\r\n                        <ResourceSubtitle>Useful Links</ResourceSubtitle>\r\n                        <TableContainer>\r\n                            <Table borderless>\r\n                                <tbody>\r\n                                    {data.links.map(link => \r\n                                        <tr><td><img src={link.icon} alt=\"icon\" style={{width: '32px', height: '32px'}}/></td><td>{link.title}</td><td><TabLink url={link.url}>{link.url}</TabLink></td></tr>\r\n                                    )}\r\n                                </tbody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </Tab>\r\n                    <Tab eventKey=\"creators\" title=\"Maple Content Creators\">\r\n                    <ResourceSubtitle>Maple Content Creators</ResourceSubtitle>\r\n                        <TableContainer>\r\n                            <Table borderless>\r\n                                <tbody>\r\n                                    {data.creators.map(link => \r\n                                        <tr><td><img src={link.icon} alt=\"icon\" style={{width: '32px', height: '32px'}}/></td><td>{link.title}</td><td><TabLink url={link.url}>{link.url}</TabLink></td></tr>\r\n                                    )}\r\n                                </tbody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </Tab>\r\n                </Tabs>\r\n                <ResourceSubtitle className=\"faq\">Frequently Asked Questions</ResourceSubtitle>\r\n                <FaqSearchWrapper><FaqSearch className=\"faq-search\" type=\"text\" placeholder=\"Search\" onChange={event => setSearchTerm((event.target.value))}></FaqSearch></FaqSearchWrapper>\r\n                <FaqSwiper\r\n                scrollbar={{ draggable: true, hide: true }}\r\n                spaceBetween={10}\r\n                slidesPerView=\"auto\"\r\n                direction=\"vertical\"\r\n                freeMode\r\n                mousewheel\r\n                >\r\n                    {\r\n                        // Since fuse returns a slightly different object, we need to use a ternary to adjust based on if the original is returned or the filtered is returned\r\n                        searchQuery(searchTerm).map( (question, index) => \r\n                        <SwiperSlide key={index}>\r\n                            <Card>\r\n                                <FaqQuestion>{question.question ? question.question : question.item.question}</FaqQuestion>\r\n                                <Card.Body>\r\n                                    {question.answer ? question.answer.map(answer => <Card.Text>{answer}</Card.Text>) : question.item.answer.map(answer => <Card.Text>{answer}</Card.Text>)}\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </SwiperSlide>\r\n                        )\r\n                    }\r\n                </FaqSwiper>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Resources\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Card } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\n/*\r\n   Component with common stylized components for pages like Content, Classes, and Events\r\n   Additionally contains common components as well\r\n    Created by: Ikasuu, Fall 2020\r\n*/\r\n\r\nexport const Title = styled.h1`\r\n    text-align: center;\r\n    margin-bottom: 3rem;\r\n    font-size: 3.5rem;\r\n`;\r\n\r\nexport const ContentTitle = styled.h1`\r\n    margin-top: 1rem;\r\n    margin-bottom: 2.5rem;\r\n    font-size: 3.5rem;\r\n`;\r\n\r\nexport const Subtitle = styled.h2`\r\n    text-align: center;\r\n    margin-top: 2rem;\r\n    margin-bottom: 2.5rem;\r\n    font-size: 2.5rem;\r\n`;\r\n\r\nexport const Caption = styled.p`\r\n    text-align: center;\r\n    margin-top: 2.5rem;\r\n    margin-bottom: 1.5rem;\r\n    font-size: 1.08rem;\r\n`;\r\n\r\n// An overlay to go over images\r\nexport const Overlay = styled.div`\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    top: 0;\r\n    left: 0;\r\n`;\r\n\r\nexport const DarkOverlay = styled.div`\r\n    position: absolute;\r\n    width: 100%;\r\n    height: inherit;\r\n    top: 0;\r\n    left: 0;\r\n    background-color: #2a2829;\r\n    opacity: 0.2;\r\n`;\r\n\r\nexport const GradientOverlay = styled.div`\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 1rem;\r\n    top: 0;\r\n    left: 0;\r\n    background: rgb(0,0,0);\r\n    background: linear-gradient(145deg, rgba(0,0,0,1) 3%, rgba(107,107,107,0) 100%); \r\n    opacity: 0.8;\r\n`;\r\n\r\nexport const ContentContainer = styled.div`\r\n    max-width: 80%;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n    justify-content: start;\r\n\r\n    @media(min-width: 200px){\r\n        max-width: 100%;\r\n    }\r\n    @media(min-width: 500px){\r\n        padding: 0 0 0 0.5rem;\r\n        max-width: 90%;\r\n    }\r\n    @media(min-width: 800px){\r\n        padding: 0 0 0 2.5rem;\r\n        max-width: 80%;\r\n    }\r\n`;\r\n\r\nconst ContentCard = styled(Card)`\r\n    min-width: 8rem;\r\n    margin: 0.5rem;\r\n\r\n    @media(min-width: 200px){\r\n        max-width: 100%;\r\n    }\r\n    @media(min-width: 400px){\r\n        max-width: 45%;\r\n    }\r\n    @media(min-width: 800px){\r\n        max-width: 30%;\r\n    }\r\n    @media(min-width: 1100px){\r\n        max-width: 23%;\r\n    }\r\n    @media(min-width: 1500px){\r\n        max-width: 23.5%;\r\n    }\r\n`;\r\n\r\nconst ContentCardTitle = styled(Card.Title)`\r\n    font-size: 1.15rem;\r\n`;\r\n\r\nconst ContentCardText = styled(Card.Text)`\r\n    font-size: 0.9rem;\r\n    line-height: 1.25rem;\r\n\r\n    @media(min-width: 200px){\r\n        font-size: 0.8rem;\r\n    }\r\n    @media(min-width: 430px){\r\n        font-size: 0.85rem;\r\n    }\r\n    @media(min-width: 800px){\r\n        font-size: 0.9rem;\r\n    }\r\n`;\r\n\r\nexport function TabLink({url}) {\r\n    return (\r\n        <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">{url}</a>\r\n    )\r\n}\r\n\r\nexport function CardContainer({content, type}) {\r\n    return (\r\n        <ContentContainer>\r\n        {\r\n            content.map(el => \r\n                <ContentCard>\r\n                    <Link to={`${type}/${el[0]}`}><Card.Img variant=\"top\" src={`${process.env.PUBLIC_URL}/thumbnail/${el[0]}.png`} alt={el[1]}/></Link>\r\n                    <Card.Body>\r\n                        <Link to={`${type}/${el[0]}`}><ContentCardTitle>{el[1]}</ContentCardTitle></Link>\r\n                        <ContentCardText>{el[2]}</ContentCardText>\r\n                    </Card.Body>\r\n                </ContentCard>\r\n            )\r\n        }\r\n    </ContentContainer>\r\n    );\r\n}\r\n\r\nexport default CardContainer\r\n"],"sourceRoot":""}