{"version":3,"sources":["components/HeaderImage.js","components/UtilityButtons.js","components/class-overview/SkillInfo.js","components/ClassSwipers.js","components/class-overview/SingleSkill.js","components/class-overview/ClassIntro.js","components/class-overview/ClassOutro.js","components/class-overview/SkillContainer.js","components/class-overview/SkillTab.js","pages/ClassOverview.js"],"names":["OuterBox","styled","div","HeaderBox","Header","Image","HeaderImage","props","fluid","src","imageUrl","MenuLink","Link","MenuHeader","h6","QuickJump","settings","setSettings","useState","anchorEl","setAnchorEl","open","Boolean","handleClose","onClick","event","currentTarget","color","size","style","position","bottom","right","zIndex","className","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","disableScrollLock","top","transform","smooth","to","scroll","el","scrollWidthOffset","variant","control","checked","animations","onChange","target","name","label","yCoordinate","getBoundingClientRect","window","pageYOffset","scrollTo","behavior","ScrollToTop","ScrollFab","ScrollTop","children","trigger","useScrollTrigger","disableHysteresis","threshold","in","InfoButton","tooltip","placement","overlay","SkillCard","Card","Icon","img","SkillName","strong","SkillBadge","Badge","MasterLevel","Subtitle","SkillDetails","Animation","Img","ModalAnimation","SkillAnimation","animation","show","setShow","centered","onHide","aria-labelledby","closeButton","Title","id","Body","SkillInfo","skillData","shortDesc","properties","maxLevel","animationSetting","valProperties","arrayProperties","Object","entries","forEach","it","includes","Parser","evaluate","x","d","Math","floor","u","ceil","y","cooltimeMS","getValsFromProperties","map","index","key","icons","icon","alt","type","reqLev","desc","Text","parse","DOMPurify","sanitize","details","detail","replace","match","split","str","as","SwiperCore","use","Scrollbar","ClassContainer","ClassFigure","Figure","ClassGroupContainer","classes","classGroup","height","offset","job","width","process","TopClassSwipe","spaceBetween","slidesPerView","breakpoints","360","490","770","991","1199","content","path","class","margin","ClassSwipe","scrollbar","draggable","hide","param","explorers","cygnusKnights","heroes","resistance","nova","sengoku","flora","other","renderSwitch","SingleSkill","state","retrievedData","loading","this","_isMounted","axiosRetry","axios","retries","get","version","then","response","push","data","setState","catch","err","console","log","loadingImage","paddingLeft","skill","description","Component","LinkSkill","linkSkill","NotableSkill","cursor","backgroundImage","StyledHeaderTwo","h2","StyledHeaderThree","h3","StyledHeaderFive","h5","PropertyContainer","Col","ProsConsContainer","ClassPropertyWrapper","ClassProperties","Container","Table","borderless","jobGroup","mainStat","secondaryStat","Row","legion","display","wordBreak","legionValue","equipment","weapon","marginBottom","weapons","verticalAlign","secondary","secondaryWeapons","weaponConsumable","ammo","PropertyBox","skills","classType","ClassProsCons","pros","cons","pro","con","BaseStatsWrapper","BaseStatTitle","BuffAndActivesWrapper","StatTableData","td","ClassDetail","specialThanks","md","baseStats","stat","buffInfo","active","summons","buffCd","buffFifth","binds","iFrame","buildPath","build","hyperBuild","recommended","nodeInfo","possible","innerAbility","ability","CreationTitle","CreationImage","HowToCreateCard","ClassCreation","classTitle","howToCreate","thumbnail","image","npc","info","ADD_ATTR","ExtraContentCard","ClassExtraContent","title","ClassIntro","notable","prosCons","MoreInfoLink","ClassMoreInfo","moreInfo","link","href","rel","ClassSuggestions","CreditContainer","ClassCredit","credits","credit","ClassOutro","SkillContainer","prevProps","prevState","VSkillContainer","convertCommonVToArray","fifth","fifthCommon","commonFifth","getInitialClassSettings","savedSettings","storage","getItem","JSON","offline","SkillTab","primary","hyper","useEffect","setItem","stringify","Tabs","onSelect","setTimeout","forceCheck","skilltree","Tab","eventKey","createSkillTabs","fifthMain","hyperPassive","hyperActive","ClassOverview","fail","fetch","params","res","json","fetchedData","location","hash","element","document","getElementById","scrollIntoView","HeaderImageUrl","library","Helmet","meta","extraContent","hyperSkillBuild"],"mappings":"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","file":"static/js/10.3b73fa62.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Image } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\n\r\nimport { DarkOverlay } from '../components/Page';\r\n\r\n/*\r\n    Header image component that appears on the top of certain pages\r\n    Created by: Ikasuu, Fall 2020\r\n*/\r\n\r\n// Most outer container for margins\r\nconst OuterBox = styled.div`\r\n    margin-bottom: 4rem;\r\n`;\r\n\r\n// Box container for our header\r\nconst HeaderBox = styled.div`\r\n    height: 20rem;\r\n`;\r\n\r\n// Header Image\r\nconst Header = styled(Image)`\r\n    width: 100%;\r\n    height: 100%;\r\n    object-position: 50% 75%;\r\n    object-fit: cover;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nfunction HeaderImage(props) {\r\n    return (\r\n        <OuterBox>\r\n            <HeaderBox>\r\n                <Header fluid src={props.imageUrl}/>\r\n                <DarkOverlay/>\r\n            </HeaderBox>\r\n        </OuterBox>\r\n    );\r\n}\r\n\r\nexport default HeaderImage;\r\n","import React, { useState } from 'react';\r\nimport { Button, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport { HashLink as Link } from 'react-router-hash-link';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport styled from 'styled-components';\r\n\r\n/*\r\n    Info Button which when hovered shows a tooltip\r\n    Created by: Ikasuu, Fall 2020\r\n*/\r\n\r\nfunction InfoButton({tooltip}) {\r\n    return (\r\n        <OverlayTrigger placement=\"top\" overlay={\r\n            <Tooltip style={{zIndex: '1'}}>\r\n                {tooltip}\r\n            </Tooltip>\r\n        }>\r\n            <Button variant=\"link\"><span className=\"info-button\"/></Button>\r\n        </OverlayTrigger>\r\n    );\r\n}\r\n\r\n/*\r\n    Fab button that pops up quick jump menu in class overviews\r\n    Created by: Ikasuu, Spring 2021\r\n*/\r\n\r\n// Styling for each link\r\nconst MenuLink = styled(Link)`\r\n    color: black !important;\r\n    width: 100%;\r\n\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nconst MenuHeader = styled.h6`\r\n    text-align: center;\r\n    margin-top: 0.25rem;\r\n`;\r\n\r\nexport function QuickJump({settings, setSettings}) {\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const open = Boolean(anchorEl);\r\n\r\n    const handleMenu = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        setSettings({ ...settings, [event.target.name]: event.target.checked });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Fab onClick={handleMenu} color=\"primary\" size=\"medium\" style={{position: 'fixed', bottom: '2.5rem', right: '2.5rem', zIndex: '1000'}}>\r\n                <span className=\"jump-button\"/>\r\n            </Fab>\r\n            <Menu\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                    vertical: 190,\r\n                    horizontal: 200,\r\n                }}\r\n                open={open}\r\n                onClose={handleClose}\r\n                disableScrollLock\r\n            >\r\n                <div className=\"arrow\" style={{position: \"absolute\", top: \"0px\", transform: \"translate(0px, 8px)\"}}/>\r\n                <MenuHeader>Quick Jump</MenuHeader>\r\n                <MenuItem onClick={handleClose}><MenuLink smooth to=\"#property\" scroll={el => scrollWidthOffset(el)}>Class Properties</MenuLink></MenuItem>\r\n                <MenuItem onClick={handleClose}><MenuLink smooth to=\"#stat\" scroll={el => scrollWidthOffset(el)}>Base Stats</MenuLink></MenuItem>\r\n                <MenuItem onClick={handleClose}><MenuLink smooth to=\"#skill\" scroll={el => scrollWidthOffset(el)}>Skill Info</MenuLink></MenuItem>\r\n                <Divider variant=\"middle\" />\r\n                <MenuHeader>Settings</MenuHeader>\r\n                <FormGroup>\r\n                    {/* <FormControlLabel\r\n                        control={<Switch color=\"primary\" checked={settings.offline} onChange={handleChange} name=\"offline\"/>}\r\n                        label=\"Offline Skill Info\"\r\n                    /> */}\r\n                    <FormControlLabel\r\n                        control={<Switch color=\"primary\" checked={settings.animations} onChange={handleChange} name=\"animations\"/>}\r\n                        label=\"Skill Animations\"\r\n                    />\r\n                </FormGroup>\r\n            </Menu>\r\n        </div>\r\n    )\r\n}\r\n\r\n//Used to scroll to anchor tags\r\nconst scrollWidthOffset = (el) => {\r\n    const yCoordinate = el.getBoundingClientRect().top + window.pageYOffset;\r\n    const yOffset = -80; \r\n    window.scrollTo({ top: yCoordinate + yOffset, behavior: 'smooth' }); \r\n}\r\n\r\n/*\r\n    Repsonsible for creating Fab button to jump back up to top on Content and Event pages\r\n    Created by: Ikasuu, Spring 2021\r\n*/\r\n\r\nexport function ScrollToTop() {\r\n    return (\r\n        <Link smooth to=\"#\" scroll={el => scrollWidthOffset(el)}><ScrollFab/></Link>\r\n    );\r\n}\r\n\r\n// Function to trigger fab to appear when scrolling\r\nfunction ScrollTop(props){\r\n    const {children} = props;\r\n    const trigger = useScrollTrigger({\r\n        disableHysteresis: true,\r\n        threshold: 100,\r\n    });\r\n\r\n    return(\r\n        <Zoom in={trigger}>\r\n            {children}\r\n        </Zoom>\r\n    );\r\n}\r\n\r\n// Function for quick jump menu, handles logic\r\nfunction ScrollFab(){\r\n    return(\r\n        <ScrollTop>\r\n                <Fab color=\"primary\" size=\"medium\" style={{position: 'fixed', bottom: '2.5rem', right: '2.5rem', zIndex: '1000'}}>\r\n                    <span className=\"scroll-top-button\"/>\r\n                </Fab>\r\n        </ScrollTop>\r\n    );\r\n}\r\n\r\nexport default InfoButton;\r\n","import React, { useState } from 'react';\r\nimport { Badge, Card, Image, Modal } from 'react-bootstrap';\r\nimport { Parser } from 'expr-eval';\r\nimport DOMPurify from 'dompurify';\r\nimport parse from 'html-react-parser';\r\nimport styled from 'styled-components';\r\n\r\n/*\r\n    Skill component that creates a component to hold and render our skill info like name, desc, and properties \r\n    Created by: Ikasuu, Fall 2020\r\n*/\r\n\r\n// Main container/card\r\nconst SkillCard = styled(Card)`\r\n    max-width: 40rem;\r\n    margin: 1.5rem 0 1.5rem 0;\r\n`;\r\n\r\n// Skill Icon\r\nconst Icon = styled.img`\r\n    margin-right: 0.25rem;\r\n`;\r\n\r\n// Skill Name\r\nconst SkillName = styled.strong`\r\n    margin-left: 0.25rem;\r\n    font-family: muli, sans-serif !important;\r\n    font-weight: 700 !important;\r\n    font-style: normal !important;\r\n`;\r\n\r\n// The elements beside the skill name\r\nconst SkillBadge = styled(Badge)`\r\n    margin-left: 0.25rem;\r\n    font-family: acumin-pro, sans-serif !important;\r\n`;\r\n\r\n// Styling for the Master Level subtitle\r\nconst MasterLevel = styled(Card.Subtitle)`\r\n    margin-bottom: 0.7rem;\r\n    font-size: 0.95rem;\r\n    font-weight: 300 !important;\r\n`;\r\n\r\n// /* The details / bullet points below the description */\r\nconst SkillDetails = styled.div`\r\n    margin-top: -0.5rem;\r\n`;\r\n\r\nfunction SkillInfo({skillData, name, shortDesc, properties, maxLevel, animationSetting }) {\r\n        //Get the proper values using the properties and calculating with maxLevel\r\n        const valProperties = getValsFromProperties(properties, maxLevel);\r\n        \r\n        /*\r\n            Starting from top to bottom, Card.Body contains all the contents of our skill info\r\n            The first tag is our skill animations, the && (short-circuit eval) only displays animations if animations exists (or is not null/undefined)\r\n            We add a white background via background-image in styles since some skills have a transparent background\r\n\r\n            Within Card.Title we have the icons, skill name, and any badges such as skill type and for hyper skills a lv requirement\r\n\r\n            Card.Subtitle contains only Master Level info\r\n\r\n            In the Card.Text we parse HTML string and sanitize it before injecting into DOM. Certain skills will not have descriptions if the skill's short desc explains already\r\n            If there are any details to accompany the description we include it below - it is also parsed and sanitized\r\n\r\n            The last component, Card.Subtitle contains our skill's short desc provided by an API\r\n\r\n        */\r\n        return (\r\n            <SkillCard>\r\n                <Card.Body>\r\n                    {skillData.animations && animationSetting && skillData.animations.map((animation, index) => <SkillAnimation key={index} animation={animation} name={name}/>\r\n                    )}\r\n                    <Card.Title>\r\n                        {skillData.icons.map((icon, index) => <Icon key={index} src={icon} alt=\"\"/>)}<SkillName>{name}</SkillName>\r\n                        <SkillBadge variant=\"secondary\">{skillData.type}</SkillBadge>\r\n                        {skillData.reqLev && <SkillBadge variant=\"secondary\">Lv. {skillData.reqLev}</SkillBadge>}\r\n                    </Card.Title>\r\n                    <MasterLevel><em>Master Level: {maxLevel}</em></MasterLevel>\r\n                    {skillData.desc && <Card.Text>{parse(DOMPurify.sanitize(skillData.desc))}</Card.Text>}\r\n                    {skillData.details && <SkillDetails><ul>{skillData.details.map((detail, index) => <li key={index}>{parse(DOMPurify.sanitize(detail))}</li>)}</ul></SkillDetails>}\r\n                    {/* Uses regex to replace temp values in string with the proper values from valProperties. As well, does string formatting like we did with desc*/}\r\n                    {/* Lastly, we split the string into multiple parts where new lines are needed */}\r\n                    <div>{\r\n                        shortDesc ? shortDesc.replace(/#(\\w+)/g, (match,key) => valProperties[key]||match).replace(/#c/g, '').replace(/#z/g, '0').replace(/#/g, '').replace(/mpCon/g, '0').replace(/\\\\r/g, '').replace(/\\\\N/g, '\\\\n').replace(/\\\\c/g, '').split('\\\\n').map((str, index) =>\r\n                            <Card.Subtitle key={index} as=\"p\" className=\"mb-2 text-muted short-desc\">{str}</Card.Subtitle>) : null\r\n                    }</div>\r\n                </Card.Body>\r\n            </SkillCard>\r\n        );\r\n}\r\n\r\n//Function call evaluates the expressions from the properties state into values using the Master Level of the Skill\r\n//Used so that we have the proper values for things like Damage, Mana Cost, etc.\r\nfunction getValsFromProperties(properties, maxLevel){\r\n    //Store object entries as array of key/values for use\r\n    const arrayProperties = Object.entries(properties);\r\n    //Create a new object to store the new values\r\n    const valProperties = {};\r\n    //For each property have the key in valProperties the same as arrayProperties and the value our evaluated expression\r\n    arrayProperties.forEach(it =>{\r\n        //If statement to omit non expressions\r\n        if(!it[1].includes(']') && it[0] !== 'action' && it[0] !== 'memo_PL' && !it[1].includes('Image<Rgba32>:')){\r\n            valProperties[it[0]] = (Parser.evaluate(it[1], { x: maxLevel, d: Math.floor, u: Math.ceil, y: 1}));\r\n        }\r\n    });\r\n    //Required to convert any milliseconds cooldowns into seconds cooldowns else we will have wrong cooldowns (like 500 secs instead of 0.5 secs)  \r\n    if(valProperties.cooltimeMS) { valProperties.cooltimeMS = valProperties.cooltimeMS * 0.001;}\r\n    return valProperties;\r\n}\r\n\r\n/*\r\n    Component used in SkillInfo to show animations of skill, handles logic for displaying it's own animation in a modal\r\n    Created by: Ikasuu, Fall 2020\r\n*/\r\n\r\nconst Animation = styled(Card.Img)`\r\n    margin-bottom: 1rem;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst ModalAnimation = styled(Image)`\r\n    width: 100%;\r\n    height: auto;\r\n`;\r\n\r\nfunction SkillAnimation({animation, name}) {\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    return (\r\n        <span>\r\n            <Animation variant=\"top\" src={animation} onClick={handleShow}/>\r\n                <Modal centered  show={show} onHide={handleClose} aria-labelledby=\"notable-skill\" size=\"lg\">\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"notable-skill\">\r\n                            {name}\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <ModalAnimation fluid src={animation}/>\r\n                    </Modal.Body>\r\n                </Modal>\r\n        </span>\r\n    );\r\n}\r\n\r\nexport default SkillInfo;","import React from 'react';\r\nimport { Image, Figure } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport SwiperCore, { Scrollbar } from 'swiper';\r\nimport styled from 'styled-components';\r\nimport LazyLoad from 'react-lazyload';\r\n\r\nimport { classes } from '../special/Values';\r\nimport { Overlay } from './Page';\r\n\r\n// Import Swiper styles\r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/scrollbar/scrollbar.scss';\r\n\r\nSwiperCore.use([Scrollbar]);\r\n\r\n/*\r\nThis file contains the swiping elements that use the class portraits\r\nIn this file you will find:\r\n-ClassGroupContainer - container class element on the Classes page\r\n-TopClassSwipe - most viewed classes swiper element on the Homepage page\r\n-ClassSwipe - swipable class element at the bottom of Class Overview\r\n*/\r\n\r\n/*\r\n    Responsible for the class container element on the Classes page\r\n    Created by: Ikasuu, Winter 2020\r\n*/\r\n\r\n// Container which holds all the classes for a specfic class group\r\nconst ClassContainer = styled.div`\r\n    width: 62%;\r\n    padding-left: 2.5rem;\r\n    margin: auto;\r\n\r\n    /* Adjustments to container and figures for mobile / tablet */\r\n    @media(max-width: 1199px){\r\n        width: 90%;\r\n    }\r\n\r\n    @media(max-width: 521px){\r\n        width: 95%;\r\n    }\r\n\r\n    @media(max-width: 473px){\r\n        padding-left: 1rem;\r\n    }\r\n`;\r\n\r\nconst ClassFigure = styled(Figure.Image)`\r\n    margin: 0.5rem;\r\n    @media(max-width: 473px){\r\n        margin: 0.25rem;\r\n    }\r\n    @media(max-width: 422px){\r\n        margin: 0;\r\n    }\r\n`;\r\n\r\nexport function ClassGroupContainer({classes, classGroup}){\r\n    return(\r\n        <ClassContainer>\r\n            <LazyLoad height={200} offset={100}>\r\n                {classes.map(job => \r\n                    <Link to={`/classes/${classGroup}/${job[0]}`} key={job} className=\"hvr-float\">\r\n                        <Figure>\r\n                            <ClassFigure\r\n                                width={120}\r\n                                height={176}\r\n                                alt={job[1]}\r\n                                src={`${process.env.PUBLIC_URL}/class-portrait/${job[0]}.png`}/>\r\n                            <Overlay/>\r\n                        </Figure>\r\n                    </Link>\r\n                )}\r\n            </LazyLoad>\r\n        </ClassContainer>\r\n    )\r\n}\r\n\r\n/*\r\n    Responsible for the most viewed classes swiper element on the Homepage page\r\n    Created by: Ikasuu, Fall 2020\r\n*/\r\n\r\nexport function TopClassSwipe({classes}){\r\n    return(\r\n        <Swiper\r\n            spaceBetween={10}\r\n            slidesPerView={2}\r\n            breakpoints={{\r\n            // when window width is >= 360px\r\n            360: {\r\n                slidesPerView: 3.5,\r\n                },\r\n            // when window width is >= 490px\r\n            490: {\r\n                slidesPerView: 4.5,\r\n                },\r\n            // when window width is >= 770px\r\n            770: {\r\n                slidesPerView: 5.5,\r\n                },\r\n            // when window width is >= 991px\r\n            991: {\r\n                slidesPerView: 8.5,\r\n            },\r\n            // when window width is >= 1199px\r\n            1199: {\r\n                slidesPerView: 9.5,\r\n                }\r\n            }}\r\n        >\r\n            {\r\n                classes.map((content, index) => \r\n                <SwiperSlide key={index}>\r\n                    <Link to={`/classes/${content.path}`} key={content.alt} className=\"hvr-float\">\r\n                        <Image src={`${process.env.PUBLIC_URL}/class-portrait/${content.class}.png`} alt={content.alt} style={{width: '100px', margin: '1rem 0 1rem 0'}}/>\r\n                        <div className=\"class-overlay\"/>\r\n                    </Link>\r\n                </SwiperSlide>\r\n                )\r\n            }\r\n        </Swiper>\r\n    );\r\n}\r\n\r\n/*\r\n    Responsible for the swipable class element at the bottom of Class Overview\r\n    Created by: Ikasuu, Fall 2020\r\n*/\r\n\r\nfunction ClassSwipe({classGroup}) {\r\n    let name = classGroup\r\n    \r\n    // Removes words like (Xenon) or (Beast Tamer) for Resistance and Other type classes when displaying <h5>\r\n    if(classGroup.includes(\"Resistance\")){\r\n        name = \"Resistance\";\r\n    }else if(classGroup.includes(\"Other\")){\r\n        name = \"Other\";\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h5>Check out some more {name} classes below:</h5>\r\n            <Swiper\r\n                scrollbar={{ draggable: true, hide: true }}\r\n                spaceBetween={10}\r\n                slidesPerView={2}\r\n                breakpoints={{\r\n                    // when window width is >= 360px\r\n                    360: {\r\n                        slidesPerView: 3.5\r\n                    },\r\n                    // when window width is >= 490px\r\n                    490: {\r\n                        slidesPerView: 4.5\r\n                    },\r\n                    // when window width is >= 770px\r\n                    770: {\r\n                        slidesPerView: 5.5\r\n                    },\r\n                    // when window width is >= 991px\r\n                    991: {\r\n                    slidesPerView: 8.5\r\n                    },\r\n                    // when window width is >= 1199px\r\n                    1199: {\r\n                        slidesPerView: 9.5\r\n                    }\r\n                }}\r\n            >\r\n                {renderSwitch(name)}\r\n            </Swiper>\r\n        </div>\r\n    );\r\n}\r\n\r\n//Renders the proper class groups based on current class group\r\nfunction renderSwitch(param){\r\n    switch (param) {\r\n        case \"Explorers\":\r\n            return(\r\n                classes.explorers.map((job, index) => \r\n                    <SwiperSlide key={index}>\r\n                        <Link to={`/classes/explorers/${job[0]}`} key={job} className=\"hvr-float\">\r\n                            <Image src={`${process.env.PUBLIC_URL}/class-portrait/${job[0]}.png`} style={{width: '100px', margin: '1rem 0 1rem 0'}}/>\r\n                            <Overlay/>\r\n                        </Link>\r\n                    </SwiperSlide>\r\n                )\r\n            );\r\n\r\n        case \"Cygnus Knights\":\r\n            return(\r\n                classes.cygnusKnights.map((job, index) => \r\n                    <SwiperSlide key={index}>\r\n                        <Link to={`/classes/cygnus-knights/${job[0]}`} key={job} className=\"hvr-float\">\r\n                            <Image src={`${process.env.PUBLIC_URL}/class-portrait/${job[0]}.png`} style={{width: '100px', margin: '1rem 0 0 0'}}/>\r\n                            <Overlay/>\r\n                        </Link>\r\n                    </SwiperSlide>\r\n                )\r\n            );\r\n\r\n        case \"Heroes\":\r\n            return(\r\n                classes.heroes.map((job, index) => \r\n                    <SwiperSlide key={index}>\r\n                        <Link to={`/classes/heroes/${job[0]}`} key={job} className=\"hvr-float\">\r\n                            <Image src={`${process.env.PUBLIC_URL}/class-portrait/${job[0]}.png`} style={{width: '100px', margin: '1rem 0 1rem 0'}}/>\r\n                            <Overlay/>\r\n                        </Link>\r\n                    </SwiperSlide>\r\n                )\r\n            );\r\n\r\n        case \"Resistance\":\r\n            return(\r\n                classes.resistance.map((job, index) => \r\n                    <SwiperSlide key={index}>\r\n                        <Link to={`/classes/resistance/${job[0]}`} key={job} className=\"hvr-float\">\r\n                            <Image src={`${process.env.PUBLIC_URL}/class-portrait/${job[0]}.png`} style={{width: '100px', margin: '1rem 0 1rem 0'}}/>\r\n                            <Overlay/>\r\n                        </Link>\r\n                    </SwiperSlide>\r\n                )\r\n            );\r\n\r\n        case \"Nova\":\r\n            return(\r\n                classes.nova.map((job, index) => \r\n                    <SwiperSlide key={index}>\r\n                        <Link to={`/classes/nova/${job[0]}`} key={job} className=\"hvr-float\">\r\n                            <Image src={`${process.env.PUBLIC_URL}/class-portrait/${job[0]}.png`} style={{width: '100px', margin: '1rem 0 1rem 0'}}/>\r\n                            <Overlay/>\r\n                        </Link>\r\n                    </SwiperSlide>\r\n                )\r\n            );\r\n\r\n        case \"Sengoku\":\r\n            return(\r\n                classes.sengoku.map((job, index) => \r\n                    <SwiperSlide key={index}>\r\n                        <Link to={`/classes/sengoku/${job[0]}`} key={job} className=\"hvr-float\">\r\n                            <Image src={`${process.env.PUBLIC_URL}/class-portrait/${job[0]}.png`} style={{width: '100px', margin: '1rem 0 1rem 0'}}/>\r\n                            <Overlay/>\r\n                        </Link>\r\n                    </SwiperSlide>\r\n                )\r\n            );\r\n\r\n        case \"Flora\":\r\n            return(\r\n                classes.flora.map((job, index) => \r\n                    <SwiperSlide key={index}>\r\n                        <Link to={`/classes/flora/${job[0]}`} key={job} className=\"hvr-float\">\r\n                            <Image src={`${process.env.PUBLIC_URL}/class-portrait/${job[0]}.png`} style={{width: '100px', margin: '1rem 0 1rem 0'}}/>\r\n                            <Overlay/>\r\n                        </Link>\r\n                    </SwiperSlide>\r\n                )\r\n            );\r\n\r\n        case \"Other\":\r\n            return(\r\n                classes.other.map((job, index) => \r\n                    <SwiperSlide key={index}>\r\n                        <Link to={`/classes/other/${job[0]}`} key={job} className=\"hvr-float\">\r\n                            <Image src={`${process.env.PUBLIC_URL}/class-portrait/${job[0]}.png`} style={{width: '100px', margin: '1rem 0 1rem 0'}}/>\r\n                            <Overlay/>\r\n                        </Link>\r\n                    </SwiperSlide>\r\n                )\r\n            );\r\n\r\n        default:\r\n            return(\r\n                classes.explorers.map((job, index) => \r\n                    <SwiperSlide key={index}>\r\n                        <Link to={`/classes/explorers/${job[0]}`} key={job} className=\"hvr-float\">\r\n                            <Image src={`${process.env.PUBLIC_URL}/class-portrait/${job[0]}.png`} style={{width: '100px', margin: '1rem 0 1rem 0'}}/>\r\n                            <Overlay/>\r\n                        </Link>\r\n                    </SwiperSlide>\r\n                )\r\n            );\r\n    }\r\n}\r\n\r\nexport default ClassSwipe;\r\n","import React, { Component, useState } from 'react';\r\nimport { Image, Modal } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport axiosRetry from 'axios-retry';\r\n\r\nimport { version, loadingImage } from '../../special/Values';\r\nimport SkillInfo from './SkillInfo'\r\n\r\n/*\r\n    This file contains Link Skills and Notable Skills, any skills that need to be rendered on its own\r\n*/\r\n\r\n/*\r\n    Renders a single skill, makes API call and renders a SkillInfo component\r\n    Created by: Ikasuu, Fall 2020\r\n*/\r\n\r\nexport class SingleSkill extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        //SkillContainer holds all the required skills we need to render in skillData\r\n        //Their data will be stored in retrievedData after it has been fetched\r\n        this.state = {\r\n             retrievedData: [],\r\n             skillData: props.skillData,\r\n             loading: true\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        const { skillData } = this.state\r\n        this._isMounted = true;\r\n        axiosRetry(axios, { retries: 5 }); //Retries request up to 5 times if request fails\r\n        //Execute call then store it in the state\r\n        axios.get(`https://maplestory.io/api/GMS/${version}/job/skill/${skillData.id}`)\r\n            .then(response => {\r\n                if(this._isMounted){\r\n                    const skillData = [];\r\n                    skillData.push(response.data);\r\n                    this.setState({\r\n                        retrievedData: skillData,\r\n                        loading: false\r\n                    });\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        // Need to control isMounted value so we cancel the API call when component is unmounted\r\n        this._isMounted = false;\r\n    }\r\n\r\n    render() {\r\n        const { loading, retrievedData } = this.state\r\n        return (\r\n            <div>\r\n            {\r\n                loading ? <div style={{margin: '2rem 40% 2rem 40%'}}><Image src={loadingImage}/><div style={{paddingLeft: '0.5rem'}}>Loading!</div></div> : \r\n                <div>\r\n                {\r\n                    retrievedData.map((skill, index) => \r\n                        <div key={skill.description.id}>\r\n                            <SkillInfo \r\n                                skillData={this.state.skillData}\r\n                                name={skill.description.name}\r\n                                desc={skill.description.desc}\r\n                                shortDesc={skill.description.shortDesc}\r\n                                properties={skill.properties} \r\n                                maxLevel={skill.properties.maxLevel}/>\r\n                        </div>)\r\n                }\r\n                </div>\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n/*\r\n    Component to hold link skill\r\n    Created by: Ikasuu, Fall 2020\r\n*/\r\n\r\nexport function LinkSkill({linkSkill}) {\r\n    return (\r\n        <div>\r\n            <h2>Link Skill</h2>\r\n            <SingleSkill skillData={linkSkill}/> \r\n        </div>\r\n    );\r\n}\r\n\r\n/*\r\n    Displays the notable skills in the class properties section and handles modal logic\r\n    Created by: Ikasuu, Fall 2020\r\n*/\r\n\r\nexport function NotableSkill({ skill }) {\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    return (\r\n        <span>\r\n            <Image src={skill.icons[0]} className=\"hvr-grow\" style={{margin: '0 0.25rem 0.5rem 0.25rem', cursor: 'pointer'}} onClick={handleShow}/>\r\n            <Modal centered  show={show} onHide={handleClose} aria-labelledby=\"notable-skill\" size=\"lg\">\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"notable-skill\">\r\n                            {skill.name}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Image src={skill.animations[0]} style={{width: '100%', backgroundImage: 'url(https://www.publicdomainpictures.net/pictures/30000/velka/plain-white-background.jpg)'}}/>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </span>\r\n    );\r\n}\r\n\r\nexport default LinkSkill;\r\n","import React from 'react';\r\nimport DOMPurify from 'dompurify';\r\nimport parse from 'html-react-parser';\r\nimport styled from 'styled-components';\r\nimport { Col, Container, Image, Table, Row, Card } from 'react-bootstrap';\r\n\r\nimport { weapons, secondaryWeapons, weaponConsumable } from '../../special/Values';\r\nimport { LinkSkill, NotableSkill } from './SingleSkill';\r\nimport { ContentTitle } from '../../components/Page';\r\nimport InfoButton from '../UtilityButtons';\r\n\r\nimport '../../css/class-overview.css';\r\n\r\n/*\r\nThis file contains the intro contents of a Class Overview\r\nIn this file you will find:\r\n-ClassIntro - Holds ClassProperties, PropertyBox, and ClassProsCons\r\n-ClassProperties\r\n-PropertyBox - This is the section below ClassProperties that has notable skills and class type\r\n-ClassProsCons\r\n-ClassDetail - Holds the base stats, buffs, build path rendering\r\n-ClassCreation - For classes that have a \"How to Create\" section\r\n-ClassExtraContent - Any extra content like explanation of Dark Sight is rendered here\r\n*/\r\n\r\n/*\r\n    Renders the upper components of the Class Overview (Class Properties, Notable Skills + Class Type, and Pros and Cons)\r\n    Created by: Ikasuu, Fall 2020\r\n*/\r\n\r\n// Adjusting margins for h2, h3, and h5\r\nconst StyledHeaderTwo = styled.h2`\r\n    margin: 1rem 0 1rem 0;\r\n`;\r\n\r\nconst StyledHeaderThree = styled.h3`\r\n    margin: 1.5rem 0 1rem 0;\r\n`;\r\n\r\nconst StyledHeaderFive = styled.h5`\r\n    margin: 1.5rem 0 1rem 0;\r\n`;\r\n\r\n// Container to hold ClassProperties and PropertyBox\r\nconst PropertyContainer = styled(Col)`\r\n  /* For iPad so that the elements do not display as blocks */\r\n  @media (max-width: 1199px){\r\n      max-width: 21rem;\r\n  }\r\n\r\n  /* Revert the changes made above for mobile users,\r\n   above scruntches the class properties component a bit too much for mobile */\r\n  @media (max-width: 991px){\r\n      max-width: none;\r\n  }\r\n`;\r\n\r\n// Container to hold ClassProsCons and LinkSkill\r\nconst ProsConsContainer = styled(Col)`\r\n  max-width: 36rem;\r\n\r\n  /* For iPad so that the elements do not display as blocks */\r\n  @media (max-width: 1199px){\r\n      max-width: 33rem;\r\n  }\r\n`;\r\n\r\nexport function ClassIntro({data}) {\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <ContentTitle>{data.class}</ContentTitle>\r\n                <div id=\"property\"/>\r\n                <Row>\r\n                    <PropertyContainer md=\"auto\">\r\n                        <ClassProperties content={data.content}/>\r\n                        <PropertyBox skills={data.skill.notable} classType={data.content.classType}/>\r\n                    </PropertyContainer>\r\n                    <ProsConsContainer md=\"auto\">\r\n                        <ClassProsCons pros={data.content.prosCons.pros} cons={data.content.prosCons.cons}/>\r\n                        <LinkSkill linkSkill={data.content.linkSkill}/>\r\n                    </ProsConsContainer>\r\n                </Row>\r\n            </Container>\r\n            <hr/>\r\n            <div id=\"stat\"/>\r\n            <ClassDetail content={data.content} skill={data.skill}/>\r\n        </div>\r\n    );\r\n}\r\n\r\n/*\r\n    Properties component in our Class Overviews\r\n    Created by: Ikasuu, Fall 2020\r\n*/\r\n\r\n// Wrapper to hold info for Class Properties\r\nconst ClassPropertyWrapper = styled.div`\r\n    max-width: 26rem;\r\n`;\r\n\r\nfunction ClassProperties({content}) {\r\n  return (\r\n      <ClassPropertyWrapper>\r\n          <StyledHeaderTwo>Class Properties</StyledHeaderTwo>\r\n          <Container>\r\n          <Table borderless>\r\n              <tbody>\r\n              <tr>\r\n                  <th><strong>Class Group</strong></th>\r\n                  <td>{content.classGroup}</td>\r\n              </tr>\r\n              <tr>\r\n                  <th><strong>Job Group</strong></th>\r\n                  <td>{content.jobGroup}</td>\r\n              </tr>\r\n              <tr>\r\n                  <th><strong>Primary Stat</strong></th>\r\n                  <td>{content.mainStat}</td>\r\n              </tr>\r\n              <tr>\r\n                  <th><strong>Secondary Stat</strong></th>\r\n                  <td>{content.secondaryStat}</td>\r\n              </tr>\r\n              <tr>\r\n                  <th><strong>Legion Bonus</strong></th>\r\n                  <td>\r\n                    <Row><Col>{content.legion}</Col></Row>\r\n                    <Row><Col style={{display: 'inline-block', wordBreak: 'break-word'}}>(+{content.legionValue})</Col></Row>\r\n                  </td>\r\n              </tr>\r\n              <tr>\r\n                  <th><strong>Primary Weapon</strong></th>\r\n                  <td>\r\n                      {content.equipment[0].weapon.map(it => <Row key={it} style={{marginBottom: '0.2rem'}}><Col><Image src={weapons[it][0]} style={{verticalAlign: 'middle'}}/> {weapons[it][1]}</Col></Row>)}\r\n                  </td>\r\n              </tr>\r\n              <tr>\r\n                  <th><strong>Secondary Weapon</strong></th>\r\n                  <td>\r\n                      {content.equipment[1].secondary.map(it => <Row key={it} style={{marginBottom: '0.2rem'}}><Col><Image src={secondaryWeapons[it][0]} style={{verticalAlign: 'middle'}}/> {secondaryWeapons[it][1]}</Col></Row>)}\r\n                  </td>\r\n              </tr>\r\n              {\r\n                  content.equipment[2] &&\r\n                  <tr>\r\n                      <th><strong>Ammo</strong></th>\r\n                      <td><div><Image src={weaponConsumable[content.equipment[2].ammo][0]} style={{verticalAlign: 'middle'}}/> {weaponConsumable[content.equipment[2].ammo][1]}</div></td>\r\n                  </tr>\r\n              }\r\n              </tbody>\r\n          </Table>\r\n          </Container>\r\n      </ClassPropertyWrapper>\r\n  );\r\n}\r\n\r\n/*\r\n    Box component to accompany the Property table in Class Overviews\r\n    Created by: Ikasuu, Fall 2020\r\n*/\r\n\r\nfunction PropertyBox({skills, classType}) {\r\n  return (\r\n      <div style={{paddingLeft: '0.5rem'}}>\r\n          <StyledHeaderFive>Notable Skills</StyledHeaderFive>\r\n          { skills.map( skill => \r\n              <NotableSkill key={skill.name} skill={skill}/>\r\n          )}\r\n          <StyledHeaderFive>Class Type</StyledHeaderFive>\r\n          <ul>\r\n              {classType.map(it => <li key={it}>{it}</li>)}\r\n          </ul>\r\n      </div>\r\n  );\r\n}\r\n\r\n/*\r\n    Pros and Cons component in our Class Overviews\r\n    Created by: Ikasuu, Fall 2020\r\n*/\r\n\r\nfunction ClassProsCons({pros, cons}) {\r\n  return (\r\n      <div>\r\n          <StyledHeaderTwo>Pros and Cons</StyledHeaderTwo>\r\n          <Container>\r\n              <StyledHeaderThree>Pros</StyledHeaderThree>\r\n              <ul>\r\n                  {pros.map( pro => <li key={pro}>{parse(DOMPurify.sanitize(pro))}</li>)}\r\n              </ul>\r\n              <StyledHeaderThree>Cons</StyledHeaderThree>\r\n              <ul>\r\n                  {cons.map( con => <li key={con}>{parse(DOMPurify.sanitize(con))}</li>)}\r\n              </ul>\r\n          </Container>\r\n      </div>\r\n  );\r\n}\r\n\r\n/*\r\n    Rendering base stats and buffs + actives in Class Overviews\r\n    Created by: Ikasuu, Fall 2020\r\n*/\r\n\r\n// Wrapper for Base Stats table\r\nconst BaseStatsWrapper = styled(Col)`\r\n  max-width: 32rem;\r\n`;\r\n\r\nconst BaseStatTitle = styled(StyledHeaderTwo)`\r\n  @media (max-width: 991px){\r\n    font-size: 1.8rem;\r\n  }\r\n`;\r\n\r\n// Wrapper for to Buffs and Other Actives container\r\nconst BuffAndActivesWrapper = styled(Col)`\r\n  max-width: 37rem;\r\n`;\r\n\r\n// Adding padding for td in Base Stats table\r\nconst StatTableData = styled.td`\r\n  padding: 0.3rem !important;\r\n`;\r\n\r\nfunction ClassDetail({content}) {\r\n    return (\r\n        <Container>\r\n          {content.specialThanks && <em>{content.specialThanks}</em>}\r\n          <Row>\r\n            <BaseStatsWrapper md=\"auto\">\r\n              <BaseStatTitle>Base Stats (From Skills)<InfoButton tooltip={parse(DOMPurify.sanitize(content.baseStats[0]))}/></BaseStatTitle>\r\n              <Table borderless>\r\n                <tbody>\r\n                    {content.baseStats[1].map((stat, index) => <tr key={index}><StatTableData>{parse(DOMPurify.sanitize(stat))}</StatTableData></tr>)}\r\n                </tbody>\r\n              </Table>\r\n            </BaseStatsWrapper>\r\n            <BuffAndActivesWrapper md=\"auto\">\r\n              <StyledHeaderTwo>Buffs &amp; Other Actives</StyledHeaderTwo>\r\n              <Table size=\"sm\" borderless>\r\n                <tbody>\r\n                  <tr><th><strong>Active Buffs</strong>:</th><StatTableData>{parse(DOMPurify.sanitize(content.buffInfo.active))}</StatTableData></tr>\r\n                  {content.buffInfo.summons ? <tr><th><strong>Summons</strong>:</th><StatTableData>{parse(DOMPurify.sanitize(content.buffInfo.summons))}</StatTableData></tr>:<tr><th><strong>Summons</strong>:</th><td>None</td></tr>}\r\n                  <tr><th><strong>Buffs with Cooldowns</strong>:</th><StatTableData>{parse(DOMPurify.sanitize(content.buffInfo.buffCd))}</StatTableData></tr>\r\n                  <tr><th><strong>5th Job Buffs</strong>:</th><StatTableData>{parse(DOMPurify.sanitize(content.buffInfo.buffFifth))}</StatTableData></tr>\r\n                  {content.buffInfo.binds ? <tr><th><strong>Binds</strong>:</th><StatTableData>{parse(DOMPurify.sanitize(content.buffInfo.binds))}</StatTableData></tr>:<tr><th><strong>Binds</strong>:</th><td>None</td></tr>}\r\n                  {content.buffInfo.iFrame ? <tr><th><strong>iFrames</strong>:</th><StatTableData>{parse(DOMPurify.sanitize(content.buffInfo.iFrame))}</StatTableData></tr>:<tr><th><strong>iFrames</strong>:</th><td>None</td></tr>}\r\n                </tbody>\r\n              </Table>\r\n            </BuffAndActivesWrapper>\r\n          </Row>\r\n        <StyledHeaderTwo>Skill Build Path</StyledHeaderTwo>\r\n        <Table borderless>\r\n          <tbody>\r\n            {content.buildPath.build.map((build,index) => \r\n              <tr key={index}>\r\n                <th>{build[0]}:</th>\r\n                <StatTableData>{parse(DOMPurify.sanitize(build[1]))}</StatTableData>\r\n              </tr>)}\r\n          </tbody>\r\n        </Table>\r\n        <ul>\r\n            {content.buildPath.details.map((detail,index) => <li key={index}>{parse(DOMPurify.sanitize(detail))}</li>)}\r\n        </ul>\r\n        <StyledHeaderFive>Hyper Skill Passive Build</StyledHeaderFive>\r\n        {parse(DOMPurify.sanitize(content.hyperBuild.recommended))}\r\n        <StyledHeaderFive>Recommended Skills for Boost Nodes</StyledHeaderFive>\r\n        <Container>{parse(DOMPurify.sanitize(content.nodeInfo.recommended))}</Container>\r\n        <StyledHeaderFive>All Possible Skills Obtainable for Boost Nodes</StyledHeaderFive>\r\n        <Container>{parse(DOMPurify.sanitize(content.nodeInfo.possible))}</Container>\r\n        <StyledHeaderFive>Recommended Inner Ability</StyledHeaderFive>\r\n              <ul>\r\n                {\r\n                    content.innerAbility.map((ability, index) => \r\n                        <li key={index}>{ability}</li>    \r\n                    )\r\n                }\r\n              </ul>\r\n      </Container>\r\n    );\r\n}\r\n\r\n/*\r\n    Rendering How to create {Class Name} component of Class Overview\r\n    Created by: Ikasuu, Fall 2020\r\n*/\r\n\r\nconst CreationTitle = styled(StyledHeaderTwo)`\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\n// Specific image styling for images in How to Create component\r\nconst CreationImage = styled(Image)`\r\n  max-width: 100%;\r\n  height: auto;\r\n  margin: 0 0.5rem 0 0.5rem;\r\n`;\r\n\r\n// Card to display info on how to create a certain character\r\nconst HowToCreateCard = styled(Card)`\r\n  max-width: 50rem;\r\n  margin-top: 1rem;\r\n`; \r\n\r\nexport function ClassCreation({classTitle, howToCreate}) {\r\n    return (\r\n        <Container>\r\n            <CreationTitle>How to create a {classTitle}</CreationTitle>\r\n            <CreationImage thumbnail\r\n                src={howToCreate.image[0]}\r\n                width={howToCreate.image[1][0]}\r\n                height={howToCreate.image[1][1]}\r\n            />\r\n            {howToCreate.npc.map(npc => <Image key={npc} src={npc[0]} width={npc[1][0]} height={npc[1][1]}/>)}\r\n            <HowToCreateCard>\r\n                <Card.Body>{howToCreate.info.map(info => <p key={info}>{parse(DOMPurify.sanitize(info, { ADD_ATTR: ['target'] }))}</p>)}</Card.Body>\r\n            </HowToCreateCard>\r\n        </Container>\r\n    );\r\n}\r\n\r\n/*\r\n    Component responisble for rendering any extra content provided from Class Overview\r\n    Created by: Ikasuu, Fall 2020\r\n*/\r\n\r\n// Card to display any extra content provided in Class Overview\r\nconst ExtraContentCard = styled(Card)`\r\n  max-width: 50rem;\r\n`;\r\n\r\nexport function ClassExtraContent({title, content}){\r\n    return(\r\n        <Container>\r\n            <StyledHeaderTwo>{title}</StyledHeaderTwo>\r\n            <ExtraContentCard>\r\n                <Card.Body>{parse(DOMPurify.sanitize(content, { ADD_ATTR: ['target'] }))}</Card.Body>\r\n            </ExtraContentCard>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default ClassIntro;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport ClassSwipe from '../ClassSwipers';\r\n\r\n/*\r\nThis file contains the outro contents (after the skills overview) of a Class Overview\r\nIn this file you will find:\r\n-ClassOutro - contains the more info and credits\r\n-ClassMoreInfo - renders the links in more info\r\n-ClassCredits - renders the credits\r\n*/\r\n\r\nexport function ClassOutro({classGroup, classTitle, moreInfo, credits}) {\r\n    return (\r\n        <div>\r\n            <ClassMoreInfo classTitle={classTitle} moreInfo={moreInfo}/>\r\n            <ClassSuggestions classGroup={classGroup}/>\r\n            <ClassCredit credits={credits}/>\r\n        </div>\r\n    );\r\n}\r\n\r\n/*\r\n    Rendering the links found in more info component in our class overviews\r\n    Created by: Ikasuu, Fall 2020\r\n*/\r\n\r\nconst MoreInfoLink = styled.div`\r\n    margin: 1rem;\r\n`;\r\n\r\nfunction ClassMoreInfo({classTitle, moreInfo}) {\r\n    return (\r\n        <div>\r\n            <h5>For more information about {classTitle} check out:</h5>\r\n            {moreInfo.map(link => <MoreInfoLink key={link}><a href={link} target='_blank' rel=\"noopener noreferrer\">{link}</a></MoreInfoLink>)}\r\n        </div>\r\n    );\r\n}\r\n\r\n/*\r\n    Rendering suggestion classes from the same class group\r\n    Created by: Ikasuu, Fall 2020\r\n*/\r\n\r\nfunction ClassSuggestions({classGroup}) {\r\n    return (\r\n        <div>\r\n            <ClassSwipe classGroup={classGroup}/>\r\n        </div>\r\n    );\r\n}\r\n\r\n/*\r\n    Rendering credits component in our class overviews\r\n    Created by: Ikasuu, Fall 2020\r\n*/\r\n\r\nconst CreditContainer = styled.div`\r\n    margin: 1rem;\r\n`;\r\n\r\nfunction ClassCredit({credits}) {\r\n    return (\r\n        <div>\r\n            <h3>Credits</h3>\r\n            {credits.map(credit => <CreditContainer key={credit}><strong>{credit[0]}</strong>: {credit[1]}</CreditContainer>)}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ClassOutro;\r\n","import React, { Component } from 'react';\r\n// import axios from 'axios';\r\n// import axiosRetry from 'axios-retry';\r\nimport { HashLink as Link } from 'react-router-hash-link';\r\n\r\nimport SkillInfo from './SkillInfo'\r\n\r\n/*\r\n    This file contains both SkillContainer and VSkillContainer (exclusively for 5th Job Skills), containers to hold a list of skills\r\n*/\r\n\r\n/*\r\n    Skill container that will hold all our skills\r\n    Responsible for getting all skill data in order such as retrieving from API and combining with offline data if needed\r\n    Created by: Ikasuu, Fall 2020\r\n*/\r\n\r\nexport class SkillContainer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        //SkillContainer holds all the required skills we need to render in skillData\r\n        //Their data will be stored in retrievedData after it has been fetched\r\n        //Loading is used to display loading image\r\n        this.state = {\r\n             retrievedData: [],\r\n             skillData: props.skillData,\r\n             loading: true,\r\n             settings: props.settings\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        // const { skillData } = this.state\r\n        this._isMounted = true;\r\n\r\n        // //Array to hold all our requests that we will execute in one call\r\n        // const request = [];\r\n        // //Array to hold all retrieved skill data\r\n        // const retrievedHolder = [];\r\n        // //Array to store offline skills temporarily to insert into retrievedHolder at the end\r\n        // const offlineHolder = [];\r\n\r\n        // axiosRetry(axios, { retries: 5 }); //Retries request up to 5 times if request fails\r\n        // //If skill has \"offline\" tag in JSON file, don't retrieve it from API and push it into the offlineHolder instead\r\n        // skillData.forEach( (skill, index) => {\r\n        //     // if(!skill.offline){\r\n        //     //     request.push(axios.get(`https://maplestory.io/api/GMS/${version}/job/skill/${skill.id}`));\r\n        //     // }\r\n        //     // else{\r\n        //         offlineHolder.push([skill, index]);\r\n        //     // }\r\n        // })\r\n        // //Execute all calls then store the response data in retrievedHolder\r\n        // axios.all(request)\r\n        //     .then(response => {\r\n        //         response.forEach(it => retrievedHolder.push(it.data));\r\n        //         //Push all offline skills into their correct positions\r\n        //         offlineHolder.forEach( skill => retrievedHolder.splice(skill[1], 0, skill[0]));\r\n        //         if(this._isMounted){\r\n        //             this.setState({\r\n        //                 retrievedData: retrievedHolder,\r\n        //                 loading: false\r\n        //             });\r\n        //         }\r\n        //     })\r\n        //     .catch(err => console.log(err));\r\n\r\n    }\r\n\r\n    // Re-renders component when settings change via UtilityButton (QuickJump)\r\n    componentDidUpdate(prevProps, prevState){\r\n        if(prevProps.settings !== this.props.settings){\r\n            this.setState({settings: this.props.settings});\r\n        };\r\n    }\r\n\r\n    // sets isMounted to false to cancel all remaining API calls\r\n    componentWillUnmount(){\r\n        this._isMounted = false;\r\n    }\r\n\r\n    //Map each skill as a SkillInfo component by passing the following info: Name of skill, Skill Description, Short Description, Skill Properties, and Skill Master Level\r\n    render() {\r\n        const { skillData, settings } = this.state;\r\n        \r\n        return (\r\n            <div>\r\n                {\r\n                    skillData.map((skill, index) => \r\n                            <div key={index}>\r\n                                <SkillInfo \r\n                                    skillData={skill}\r\n                                    name={skill.name}\r\n                                    properties={{}}\r\n                                    shortDesc={skill.shortDesc}\r\n                                    maxLevel={skill.maxLevel}\r\n                                    animationSetting={settings.animations}/>\r\n                            </div>\r\n                    )\r\n                }\r\n                <Link smooth to=\"#skill\" scroll={el => scrollWidthOffset(el)}><span className=\"jump-button-tabs\"/></Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n//Used to scroll to anchor tags\r\nconst scrollWidthOffset = (el) => {\r\n    const yCoordinate = el.getBoundingClientRect().top + window.pageYOffset;\r\n    const yOffset = -80; \r\n    window.scrollTo({ top: yCoordinate + yOffset, behavior: 'smooth' }); \r\n}\r\n\r\n/*\r\n    Skill container for 5th job skills, retrieved info from JSON instead of API (offline skills)\r\n    Created by: Ikasuu, Fall 2020\r\n*/\r\n\r\nexport function VSkillContainer({skillData, settings}) {\r\n    return (\r\n        <div>\r\n            {\r\n                skillData.map( skill => \r\n                    <div key={skill.id}>\r\n                        <SkillInfo \r\n                            skillData={skill}\r\n                            name={skill.name}\r\n                            properties={{}}\r\n                            shortDesc={skill.shortDesc}\r\n                            maxLevel={\"25 + 5\"}\r\n                            animationSetting={settings.animations}/>\r\n                    </div>)\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SkillContainer;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Container, Tab, Tabs} from 'react-bootstrap';\r\nimport { HashLink as Link } from 'react-router-hash-link';\r\nimport styled from 'styled-components';\r\nimport LazyLoad, { forceCheck } from 'react-lazyload';\r\nimport storage from 'local-storage-fallback';\r\n\r\nimport { SkillContainer, VSkillContainer } from './SkillContainer';\r\nimport { commonFifth } from '../../special/Values';\r\nimport { QuickJump } from '../UtilityButtons';\r\n\r\n/*\r\n    Tab component in our class overviews, used to hold all the skill containers and switch between them\r\n    Created by: Ikasuu, Fall 2020\r\n*/\r\n\r\n//Used to create the pre-5th job tabs\r\nfunction createSkillTabs(primary, settings){\r\n  return primary.map((skilltree, index) => \r\n    <Tab eventKey={skilltree[0]} title={skilltree[0]} key={index}>\r\n      <LazyLoad height={2000} offset={100}>\r\n        <SkillContainer skillData={skilltree[1]} settings={settings}/>\r\n      </LazyLoad>\r\n    </Tab>);\r\n}\r\n\r\n//Retrieves the common 5th job skills defined in our Values.js and returns it as an array\r\nfunction convertCommonVToArray(fifth){\r\n  const skills = [];\r\n  fifth.fifthCommon.forEach( it => skills.push(commonFifth[it]));\r\n  return skills;\r\n}\r\n\r\n// Adjusting margins for h2 and h3\r\nconst StyledHeaderTwo = styled.h2`\r\n    margin: 2rem 0 1.5rem 0;\r\n`;\r\n\r\nconst StyledHeaderThree = styled.h3`\r\n    margin: 2rem 0 1.25rem 0;\r\n`;\r\n\r\nexport function SkillTab({primary, fifth, hyper}) {\r\n\r\n  // Hook to store setting info to be used by UtilityButton (QuickJump), this is also where the button is stored\r\n  // When changes are made to settings, we have a useEffect hook that auto-updates our storage version of setting\r\n  const [settings, setSettings] = useState(getInitialClassSettings);\r\n  useEffect(() => {\r\n      storage.setItem('classSettings', JSON.stringify(settings));\r\n  },[settings]);\r\n\r\n  return (\r\n    <div>\r\n      <LazyLoad height={2000} offset={100}>\r\n        <Container>\r\n          <StyledHeaderTwo>Skill Information</StyledHeaderTwo>\r\n          <Tabs onSelect={() => setTimeout(forceCheck, 0)}>\r\n            {createSkillTabs(primary, settings)}\r\n            <Tab eventKey=\"fifth\" title=\"5th Job\">\r\n              <LazyLoad height={2000} offset={100}>\r\n                <StyledHeaderThree>Common V Skills</StyledHeaderThree>\r\n                <VSkillContainer skillData={convertCommonVToArray(fifth)} settings={settings}/>\r\n                <Link smooth to=\"#skill\" scroll={el => scrollWidthOffset(el)}><span className=\"jump-button-tabs\"/></Link>\r\n                <StyledHeaderThree>Class Specific V Skills</StyledHeaderThree>\r\n                <VSkillContainer skillData={fifth.fifthMain} settings={settings}/>\r\n                <Link smooth to=\"#skill\" scroll={el => scrollWidthOffset(el)}><span className=\"jump-button-tabs\"/></Link>\r\n              </LazyLoad>\r\n            </Tab>\r\n            {hyper && <Tab eventKey=\"hyper\" title=\"Hyper Skills\">\r\n              <LazyLoad height={2000} offset={100}>\r\n                <StyledHeaderThree>Passive Skills</StyledHeaderThree>\r\n                <SkillContainer skillData={hyper.hyperPassive} settings={settings}/>\r\n                <StyledHeaderThree>Active Skills</StyledHeaderThree>\r\n                <SkillContainer skillData={hyper.hyperActive} settings={settings}/>\r\n              </LazyLoad>\r\n            </Tab>}\r\n          </Tabs>\r\n        </Container>\r\n      </LazyLoad>\r\n      <QuickJump settings={settings} setSettings={setSettings}/> \r\n    </div>\r\n  );\r\n}\r\n\r\n// Used to scroll to anchor tags\r\nconst scrollWidthOffset = (el) => {\r\n  const yCoordinate = el.getBoundingClientRect().top + window.pageYOffset;\r\n  const yOffset = -80; \r\n  window.scrollTo({ top: yCoordinate + yOffset, behavior: 'smooth' }); \r\n}\r\n\r\n// Retrieves settings from storage, if it does not exist, use default value (false & true)\r\nfunction getInitialClassSettings(){\r\n  const savedSettings = storage.getItem('classSettings');\r\n  return savedSettings ?  JSON.parse(savedSettings) : { offline: false, animations: true };\r\n}\r\n\r\nexport default SkillTab;\r\n","import React, { Component } from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nimport ClassIntro, { ClassCreation, ClassExtraContent } from '../components/class-overview/ClassIntro';\r\nimport ClassOutro from '../components/class-overview/ClassOutro';\r\nimport HeaderImageUrl from '../special/Values';\r\nimport HeaderImage from '../components/HeaderImage';\r\nimport SkillTab from '../components/class-overview/SkillTab';\r\n\r\n/*\r\n    Repsonsible for rendering whole Class Overview page\r\n    Created by: Ikasuu, Fall 2020\r\n*/\r\n\r\nexport class ClassOverview extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: {},\r\n            loading: true,\r\n            fail: false\r\n        };\r\n    }\r\n\r\n    //Fetch the class with the corresponding url id\r\n    componentDidMount(){\r\n        fetch(`./data/${this.props.classGroup}/${this.props.match.params.id}.json`)\r\n        .then(res => res.json())\r\n        .then(fetchedData => this.setState({data: fetchedData, loading: false, fail: false}))\r\n        .catch(err => this.setState({fail: true}));\r\n    }\r\n\r\n    //If url id changes, fetch and render the new class\r\n    //When page updates, jump to anchor tag in url if there is one\r\n    componentDidUpdate(prevProps, prevState){\r\n        if(prevProps.match.params.id !== this.props.match.params.id){\r\n            this.setState({loading: true});\r\n            fetch(`./data/${this.props.classGroup}/${this.props.match.params.id}.json`)\r\n            .then(res => res.json())\r\n            .then(fetchedData => this.setState({data: fetchedData, loading: false, fail: false}))\r\n            .catch(err => this.setState({fail: true}));\r\n        };\r\n        if (window.location.hash) {\r\n            const id = window.location.hash.replace(\"#\", \"\").split(\"#\");\r\n            const element = document.getElementById(id[1]);\r\n            if(element){element.scrollIntoView();}\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const { loading, fail, data } = this.state ;\r\n        return (\r\n            <div>\r\n                <HeaderImage imageUrl={HeaderImageUrl.library}/>\r\n                {\r\n                    loading ? <Container>{fail ? <h3>Looks like there was an error in the URL you entered,\r\n                        the page you are looking for may be moved or deleted.</h3> : \"\"}</Container> :\r\n                    <div>\r\n                      <Helmet>\r\n                        <title>{`${data.class} | Grandis Library`}</title>\r\n                        <meta content={data.meta} name=\"description\"/>\r\n                      </Helmet>\r\n                      <Container>\r\n                        <ClassIntro data={data}/>\r\n                        {data.content.howToCreate && <ClassCreation classTitle={data.class} howToCreate={data.content.howToCreate}/>}\r\n                        {data.content.extraContent && <ClassExtraContent title={data.content.extraContent.title} content={data.content.extraContent.content}/>}\r\n                        <div id=\"skill\"/>\r\n                        <SkillTab\r\n                          primary={data.skill.primary}\r\n                          fifth={data.skill.fifth} hyper={data.skill.hyper}\r\n                          hyperSkillBuild={data.content.hyperBuild}\r\n                          nodeInfo={data.content.nodeInfo}/>\r\n                        <hr/>\r\n                        <ClassOutro classGroup={data.content.classGroup} classTitle={data.class} moreInfo={data.content.moreInfo} credits={data.content.credits}/>\r\n                      </Container>\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ClassOverview;"],"sourceRoot":""}